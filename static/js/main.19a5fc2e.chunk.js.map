{"version":3,"sources":["ResetViewsButton.js","Menu/posts.js","Menu/users.js","Menu/transactions.js","Menu/Items.js","Menu/schedules.js","Menu/MyAccount.js","Menu/UpdateHarga.js","Menu/TrashPurchase.js","Menu/comments.js","Menu/customers.js","components/linecharts.js","components/barcharts.js","components/barchartss.js","components/randomcharts.js","Menu/Dashboard.js","authProvider.js","App.js","serviceWorker.js","index.js"],"names":["ResetViewsButton","state","isOpen","handleClick","_this","setState","handleDialogClose","handleConfirm","_this$props","props","basePath","crudUpdateMany","resource","selectedIds","views","react_default","a","createElement","react","Button","label","onClick","this","Confirm","title","content","onConfirm","onClose","Component","connect","undefined","PostFilter","Filter","TextInput","source","alwaysOn","ReferenceInput","reference","allowEmpty","SelectInput","optionText","PostBulkActionButtons","src_ResetViewsButton","Object","assign","BulkDeleteButton","PostList","List","bulkActionButtons","posts_PostBulkActionButtons","filters","posts_PostFilter","Responsive","small","SimpleList","primaryText","record","Name","secondaryText","Bank_Name","tertiaryText","Address","medium","Datagrid","TextField","ReferenceField","EditButton","PostTitle","_ref","concat","PostEdit","Edit","posts_PostTitle","SimpleForm","DisabledInput","LongTextInput","PostCreate","Create","UserList","users_PostFilter","Date","published_at","toLocaleDateString","EmailField","ChekTransaksi","transactions_PostFilter","ShowButton","TranShow","Show","SimpleShowLayout","TabbedShowLayout","Tab","path","type","DateField","NumberField","BooleanField","defaultValue","ReferenceManyField","target","addLabel","ItemList","ScheduleList","MyAccount","cardStyle","width","minHeight","margin","display","verticalAlign","GAMBAR","style","Card_default","CardHeader_default","CardContent_default","CardActions_default","textAlign","UpdateHarga","UpdateHarga_GAMBAR","trashpurchase","CommentGrid","ids","data","map","id","key","subheader","avatar","Avatar_default","icon","PersonAdd_default","defaultProps","CommentList","comments_CommentGrid","Customers","customers_PostFilter","nasabahId","nama","hp","name","botolplastik","Kardus","Tembaga","Kaleng","Besi","Kaca","Kabel","SimpleLineChart","ResponsiveContainer_default","height","LineChart","top","right","left","bottom","XAxis","dataKey","fontSize","YAxis","CartesianGrid","strokeDasharray","Tooltip","Legend","Line","stroke","activeDot","r","colors","uv","female","male","TriangleBar","fill","x","y","d","getPath","CustomShapeBarChart","BarChart","Bar","shape","barcharts_TriangleBar","position","entry","index","Cell","CustomShapeBarChartss","barchartss_TriangleBar","organik","non_organik","kimia","randomChart","component_ResponsiveContainer","ComposedChart","Area","barSize","CenteredGrid","classes","className","root","Grid_default","container","spacing","item","xs","Paper_default","pont","paper","barcharts","barchartss","linecharts","randomcharts","PropTypes","object","isRequired","withStyles","theme","flexGrow","padding","unit","fontWeight","color","palette","text","secondary","line","authProvider","params","AUTH_LOGIN","username","localStorage","setItem","Promise","resolve","AUTH_LOGOUT","removeItem","AUTH_ERROR","status","reject","AUTH_CHECK","getItem","dataProvider","jsonServerProvider","createMuiTheme","primary","main","App","Admin","dashboard","Dashboard","Resource","list","edit","create","PostIcon","UserIcon","show","AddShoppingCart","DateRange","AccountBox","AddCircleOutline","PersonAdd","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.19a5fc2e.chunk.js","sourcesContent":["import React, { Fragment, Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Button, Confirm, crudUpdateMany } from \"react-admin\";\r\n\r\nclass ResetViewsButton extends Component {\r\n  state = {\r\n    isOpen: false\r\n  };\r\n\r\n  handleClick = () => {\r\n    this.setState({ isOpen: true });\r\n  };\r\n\r\n  handleDialogClose = () => {\r\n    this.setState({ isOpen: false });\r\n  };\r\n\r\n  handleConfirm = () => {\r\n    const { basePath, crudUpdateMany, resource, selectedIds } = this.props;\r\n    crudUpdateMany(resource, selectedIds, { views: 0 }, basePath);\r\n    this.setState({ isOpen: true });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        <Button label=\"Reset Views\" onClick={this.handleClick} />\r\n        <Confirm\r\n          isOpen={this.state.isOpen}\r\n          title=\"Update View Count\"\r\n          content=\"Are you sure you want to reset the views for these items?\"\r\n          onConfirm={this.handleConfirm}\r\n          onClose={this.handleDialogClose}\r\n        />\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  undefined,\r\n  { crudUpdateMany }\r\n)(ResetViewsButton);\r\n","// in src/posts.js\r\nimport React, { Fragment } from \"react\";\r\nimport { BulkDeleteButton } from \"react-admin\";\r\nimport ResetViewsButton from \"../ResetViewsButton\";\r\nimport {\r\n  List,\r\n  Responsive,\r\n  SimpleList,\r\n  Edit,\r\n  Create,\r\n  Datagrid,\r\n  ReferenceField,\r\n  TextField,\r\n  EditButton,\r\n  DisabledInput,\r\n  LongTextInput,\r\n  Filter,\r\n  ReferenceInput,\r\n  SelectInput,\r\n  SimpleForm,\r\n  TextInput\r\n} from \"react-admin\";\r\n\r\nconst PostFilter = props => (\r\n  <Filter {...props}>\r\n    <TextInput label=\"Search\" source=\"q\" alwaysOn />\r\n    <ReferenceInput label=\"user\" source=\"Id\" reference=\"users\" allowEmpty>\r\n      <SelectInput optionText=\"name\" />\r\n    </ReferenceInput>\r\n  </Filter>\r\n);\r\n\r\nconst PostBulkActionButtons = props => (\r\n  <Fragment>\r\n    <ResetViewsButton label=\"Reset Views\" {...props} />\r\n    {/* Add the default bulk delete action */}\r\n    <BulkDeleteButton {...props} />\r\n  </Fragment>\r\n);\r\n\r\nexport const PostList = props => (\r\n  <List\r\n    {...props}\r\n    bulkActionButtons={<PostBulkActionButtons />}\r\n    filters={<PostFilter />}\r\n  >\r\n    <Responsive\r\n      small={\r\n        <SimpleList\r\n          primaryText={record => record.Name}\r\n          secondaryText={record => record.Bank_Name}\r\n          tertiaryText={record => record.Address}\r\n        />\r\n      }\r\n      medium={\r\n        <Datagrid>\r\n          <TextField source=\"id\" />\r\n          <ReferenceField label=\"Pengguna\" source=\"id\" reference=\"users\">\r\n            <TextField source=\"Name\" />\r\n          </ReferenceField>\r\n          <TextField source=\"Bank_Name\" />\r\n          <TextField source=\"Address\" />\r\n          <EditButton />\r\n        </Datagrid>\r\n      }\r\n    />\r\n  </List>\r\n);\r\n\r\nconst PostTitle = ({ record }) => {\r\n  return <span>Post {record ? `\"${record.title}\"` : \"\"}</span>;\r\n};\r\n\r\nexport const PostEdit = props => (\r\n  <Edit title={<PostTitle />} {...props}>\r\n    <SimpleForm>\r\n      <DisabledInput source=\"id\" />\r\n      <ReferenceInput label=\"User\" source=\"userId\" reference=\"users\">\r\n        <SelectInput optionText=\"name\" />\r\n      </ReferenceInput>\r\n      <TextInput source=\"title\" />\r\n      <LongTextInput source=\"body\" />\r\n    </SimpleForm>\r\n  </Edit>\r\n);\r\n\r\nexport const PostCreate = props => (\r\n  <Create {...props}>\r\n    <SimpleForm>\r\n      <ReferenceInput label=\"User\" source=\"userId\" reference=\"users\">\r\n        <SelectInput optionText=\"name\" />\r\n      </ReferenceInput>\r\n      <TextInput source=\"title\" />\r\n      <LongTextInput source=\"body\" />\r\n    </SimpleForm>\r\n  </Create>\r\n);\r\n","// in src/users.js\r\nimport React from \"react\";\r\nimport {\r\n  List,\r\n  //Edit,\r\n  Datagrid,\r\n  EmailField,\r\n  TextField,\r\n  Filter,\r\n  //Create,\r\n  TextInput,\r\n  ReferenceInput,\r\n  SelectInput,\r\n  // SimpleForm,\r\n  // LongTextInput,\r\n  SimpleList,\r\n  Responsive\r\n  // EditButton,\r\n  // ShowButton,\r\n  // ReferenceField,\r\n  //DisabledInput\r\n} from \"react-admin\";\r\n\r\n// const UserFilter = ({ permissions, ...props }) => (\r\n//   <Filter {...props}>\r\n//     <TextInput label=\"user.list.search\" source=\"q\" alwaysOn />\r\n//     <TextInput source=\"name\" />\r\n//     {permissions === \"admin\" ? <TextInput source=\"role\" /> : null}\r\n//   </Filter>\r\n// );\r\n\r\n// export const UserList = ({ permissions, ...props }) => (\r\n//   <List\r\n//     {...props}\r\n//     filters={<UserFilter permissions={permissions} />}\r\n//     sort={{ field: \"name\", order: \"ASC\" }}\r\n//   >\r\n//     <Responsive\r\n//       small={\r\n//         <SimpleList\r\n//           primaryText={record => record.name}\r\n//           secondaryText={record =>\r\n//             permissions === \"admin\" ? record.role : null\r\n//           }\r\n//         />\r\n//       }\r\n//       medium={\r\n//         <Datagrid>\r\n//           <TextField source=\"id\" />\r\n//           <TextField source=\"name\" />\r\n//           {permissions === \"admin\" && <TextField source=\"role\" />}\r\n//           {permissions === \"admin\" && <EditButton />}\r\n//           <ShowButton />\r\n//         </Datagrid>\r\n//       }\r\n//     />\r\n//   </List>\r\n// );\r\n\r\nconst PostFilter = props => (\r\n  <Filter {...props}>\r\n    <TextInput label=\"Search\" source=\"q\" alwaysOn />\r\n    <ReferenceInput label=\"User\" source=\"userId\" reference=\"nasabah\" allowEmpty>\r\n      <SelectInput optionText=\"name\" />\r\n    </ReferenceInput>\r\n  </Filter>\r\n);\r\n\r\nexport const UserList = props => (\r\n  <List title=\"All users\" {...props} filters={<PostFilter />}>\r\n    <Responsive\r\n      small={\r\n        <SimpleList\r\n          primaryText={record => record.title}\r\n          secondaryText={record => `${record.views} views`}\r\n          tertiaryText={record =>\r\n            new Date(record.published_at).toLocaleDateString()\r\n          }\r\n        />\r\n      }\r\n      medium={\r\n        <Datagrid>\r\n          <TextField source=\"id\" />\r\n          <TextField source=\"Name\" />\r\n          <TextField source=\"Bank Name\" />\r\n          <TextField source=\"Address\" />\r\n          <TextField source=\"No.HandPhone\" />\r\n          <EmailField source=\"Email\" />\r\n        </Datagrid>\r\n      }\r\n    />\r\n  </List>\r\n);\r\n// const PostTitle = ({ record }) => {\r\n//   return <span>Post {record ? `\"${record.title}\"` : \"\"}</span>;\r\n// };\r\n// export const PostEdit = props => (\r\n//   <Edit title={<PostTitle />} {...props}>\r\n//     <SimpleForm>\r\n//       <DisabledInput source=\"id\" />\r\n//       <ReferenceInput label=\"User\" source=\"userId\" reference=\"nasabah\">\r\n//         <SelectInput optionText=\"name\" />\r\n//       </ReferenceInput>\r\n//       <TextInput source=\"title\" />\r\n//       <LongTextInput source=\"body\" />\r\n//     </SimpleForm>\r\n//   </Edit>\r\n// );\r\n\r\n// export const PostCreate = props => (\r\n//   <Create {...props}>\r\n//     <SimpleForm>\r\n//       <ReferenceInput label=\"User\" source=\"userId\" reference=\"nasabah\">\r\n//         <SelectInput optionText=\"name\" />\r\n//       </ReferenceInput>\r\n//       <TextInput source=\"title\" />\r\n//       <LongTextInput source=\"body\" />\r\n//     </SimpleForm>\r\n//   </Create>\r\n// );\r\n","// in src/users.js\r\nimport React from \"react\";\r\nimport {\r\n  List,\r\n  Datagrid,\r\n  TextField,\r\n  Filter,\r\n  TextInput,\r\n  ReferenceInput,\r\n  SelectInput,\r\n  SimpleList,\r\n  Responsive,\r\n  ReferenceField,\r\n  Show,\r\n  SimpleShowLayout,\r\n  DateField,\r\n  ShowButton,\r\n  TabbedShowLayout,\r\n  Tab,\r\n  //RichTextField,\r\n  NumberField,\r\n  BooleanField,\r\n  ReferenceManyField,\r\n  EditButton\r\n} from \"react-admin\";\r\n\r\nconst PostFilter = props => (\r\n  <Filter {...props}>\r\n    <TextInput label=\"Search\" source=\"q\" alwaysOn />\r\n    <ReferenceInput\r\n      label=\"Status\"\r\n      source=\"statusId\"\r\n      reference=\"stransaksi\"\r\n      allowEmpty\r\n    >\r\n      <SelectInput optionText=\"status\" />\r\n    </ReferenceInput>\r\n  </Filter>\r\n);\r\n\r\nexport const ChekTransaksi = props => (\r\n  <List title=\"Check Transaction\" {...props} filters={<PostFilter />}>\r\n    <Responsive\r\n      small={\r\n        <SimpleList\r\n          primaryText={record => record.title}\r\n          secondaryText={record => `${record.views} views`}\r\n          tertiaryText={record =>\r\n            new Date(record.published_at).toLocaleDateString()\r\n          }\r\n        />\r\n      }\r\n      medium={\r\n        <Datagrid>\r\n          <TextField source=\"id\" />\r\n\r\n          <ReferenceField\r\n            label=\"Penjual\"\r\n            source=\"customerId\"\r\n            reference=\"customers\"\r\n          >\r\n            <TextField label=\"Nama Penjual\" source=\"nama\" />\r\n          </ReferenceField>\r\n\r\n          <TextField label=\"Jenis Sampah\" source=\"jenissampah\" />\r\n          <TextField label=\"Jumlah Sampah\" source=\"jumlahsampah\" />\r\n          <TextField source=\"tanggal\" />\r\n\r\n          <ReferenceField\r\n            label=\"Status Transaksi\"\r\n            source=\"statusId\"\r\n            reference=\"stransaksi\"\r\n          >\r\n            <TextField source=\"status\" />\r\n          </ReferenceField>\r\n\r\n          <ShowButton />\r\n        </Datagrid>\r\n      }\r\n    />\r\n  </List>\r\n);\r\n\r\nexport const TranShow = props => (\r\n  <Show {...props}>\r\n    <SimpleShowLayout>\r\n      <ReferenceField label=\"Penjual\" source=\"customerId\" reference=\"customers\">\r\n        <TextField source=\"nama\" />\r\n      </ReferenceField>\r\n\r\n      <ReferenceField label=\"No.HP\" source=\"customerId\" reference=\"customers\">\r\n        <TextField source=\"hp\" />\r\n      </ReferenceField>\r\n\r\n      <ReferenceField label=\"Alamat\" source=\"customerId\" reference=\"customers\">\r\n        <TextField source=\"alamat\" />\r\n      </ReferenceField>\r\n\r\n      <TextField label=\"Jenis Sampah\" source=\"jenissampah\" />\r\n      <TextField label=\"Harga Sampah\" source=\"hargasampah\" />\r\n      <TextField label=\"Tanggal\" source=\"tanggal\" />\r\n\r\n      <ReferenceField label=\"Status\" source=\"statusId\" reference=\"stransaksi\">\r\n        <TextField source=\"status\" />\r\n      </ReferenceField>\r\n\r\n      <TabbedShowLayout>\r\n        <Tab label=\"Detail Penjual\">\r\n          <ReferenceField\r\n            label=\"Penjual\"\r\n            source=\"customerId\"\r\n            reference=\"customers\"\r\n          >\r\n            <TextField source=\"nama\" />\r\n          </ReferenceField>\r\n\r\n          <ReferenceField\r\n            label=\"No.HP\"\r\n            source=\"customerId\"\r\n            reference=\"customers\"\r\n          >\r\n            <TextField source=\"hp\" />\r\n          </ReferenceField>\r\n\r\n          <ReferenceField\r\n            label=\"Alamat\"\r\n            source=\"customerId\"\r\n            reference=\"customers\"\r\n          >\r\n            <TextField source=\"alamat\" />\r\n          </ReferenceField>\r\n        </Tab>\r\n\r\n        <Tab label=\"Detail Barang\">\r\n          <TextField label=\"Jenis Sampah\" source=\"jenissampah\" />\r\n          <TextField label=\"Jumlah Sampah\" source=\"jumlahsampah\" />\r\n          <TextField source=\"tanggal\" />\r\n        </Tab>\r\n\r\n        <Tab label=\"Miscellaneous\" path=\"miscellaneous\">\r\n          <TextField\r\n            label=\"Password (if protected post)\"\r\n            source=\"password\"\r\n            type=\"password\"\r\n          />\r\n          <DateField label=\"Publication date\" source=\"published_at\" />\r\n          <NumberField source=\"average_note\" />\r\n          <BooleanField\r\n            label=\"Allow comments?\"\r\n            source=\"commentable\"\r\n            defaultValue\r\n          />\r\n          <TextField label=\"Nb views\" source=\"views\" />\r\n        </Tab>\r\n        <Tab label=\"comments\" path=\"comments\">\r\n          <ReferenceManyField\r\n            reference=\"comments\"\r\n            target=\"post_id\"\r\n            addLabel={false}\r\n          >\r\n            <Datagrid>\r\n              <TextField source=\"body\" />\r\n              <DateField source=\"created_at\" />\r\n              <EditButton />\r\n            </Datagrid>\r\n          </ReferenceManyField>\r\n        </Tab>\r\n      </TabbedShowLayout>\r\n    </SimpleShowLayout>\r\n  </Show>\r\n);\r\n","// in src/users.js\r\nimport React from \"react\";\r\nimport { List, Datagrid, EmailField, TextField } from \"react-admin\";\r\n\r\nexport const ItemList = props => (\r\n  <List title=\"All Items\" {...props}>\r\n    <Datagrid>\r\n      <TextField source=\"id\" />\r\n      <TextField source=\"name\" />\r\n      <TextField source=\"username\" />\r\n      <EmailField source=\"email\" />\r\n    </Datagrid>\r\n  </List>\r\n);\r\n","import React from \"react\";\r\nimport { List, Datagrid, EmailField, TextField } from \"react-admin\";\r\n\r\nexport const ScheduleList = props => (\r\n  <List title=\"Schedule Pickup\" {...props}>\r\n    <Datagrid>\r\n      <TextField source=\"id\" />\r\n      <TextField source=\"name\" />\r\n      <TextField source=\"username\" />\r\n      <EmailField source=\"email\" />\r\n    </Datagrid>\r\n  </List>\r\n);\r\n","// in src/posts.js\r\nimport React from \"react\";\r\nimport { List, Datagrid, TextField } from \"react-admin\";\r\n\r\nexport const MyAccount = props => (\r\n  <List title=\"My Account\" {...props}>\r\n    <Datagrid>\r\n      <TextField source=\"id\" />\r\n      <TextField source=\"title\" />\r\n      <TextField source=\"body\" />\r\n    </Datagrid>\r\n  </List>\r\n);\r\n","// in src/UpdateHarga.js\r\n// import React from \"react\";\r\n// import { List, Datagrid, EmailField, TextField } from \"react-admin\";\r\n\r\n// export const UpdateHarga = props => (\r\n//   <List title=\"add/update pricing\" {...props}>\r\n//     <Datagrid>\r\n//       <TextField source=\"id\" />\r\n//       <TextField source=\"name\" />\r\n//       <TextField source=\"username\" />\r\n//       <EmailField source=\"email\" />\r\n//     </Datagrid>\r\n//   </List>\r\n// );\r\n\r\nimport React from \"react\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport CardHeader from \"@material-ui/core/CardHeader\";\r\nimport { List } from \"react-admin\";\r\n\r\nconst cardStyle = {\r\n  width: 300,\r\n  minHeight: 300,\r\n  margin: \"0.5em\",\r\n  display: \"inline-block\",\r\n  verticalAlign: \"top\"\r\n};\r\nconst GAMBAR = () => (\r\n  <div style={{ margin: \"1em\" }}>\r\n    <Card style={cardStyle}>\r\n      <CardHeader title=\"Kaleng\" />\r\n      <CardContent>INI GAMBAR SAMPAH</CardContent>\r\n      <CardContent>sssss about&nbsp;</CardContent>\r\n      <CardActions style={{ textAlign: \"right\" }} />\r\n    </Card>\r\n\r\n    <Card style={cardStyle}>\r\n      <CardHeader title=\"Kardus\" />\r\n      <CardContent>INI GAMBAR SAMPAH</CardContent>\r\n      <CardContent>sssss about&nbsp;</CardContent>\r\n      <CardActions style={{ textAlign: \"right\" }} />\r\n    </Card>\r\n\r\n    <Card style={cardStyle}>\r\n      <CardHeader title=\"Botol AQua\" />\r\n      <CardContent>INI GAMBAR SAMPAH</CardContent>\r\n      <CardContent>sssss about&nbsp;</CardContent>\r\n      <CardActions style={{ textAlign: \"right\" }} />\r\n    </Card>\r\n\r\n    <Card style={cardStyle}>\r\n      <CardHeader title=\"lcnskjdcnasc\" />\r\n      <CardContent>INI GAMBAR SAMPAH</CardContent>\r\n      <CardContent>sssss about&nbsp;</CardContent>\r\n      <CardActions style={{ textAlign: \"right\" }} />\r\n    </Card>\r\n\r\n    <Card style={cardStyle}>\r\n      <CardHeader title=\"asdfnksjbc\" />\r\n      <CardContent>INI GAMBAR SAMPAH</CardContent>\r\n      <CardContent>sssss about&nbsp;</CardContent>\r\n      <CardActions style={{ textAlign: \"right\" }} />\r\n    </Card>\r\n\r\n    <Card style={cardStyle}>\r\n      <CardHeader title=\"asdfnksjbc\" />\r\n      <CardContent>INI GAMBAR SAMPAH</CardContent>\r\n      <CardContent>sssss about&nbsp;</CardContent>\r\n      <CardActions style={{ textAlign: \"right\" }} />\r\n    </Card>\r\n  </div>\r\n);\r\n\r\nexport const UpdateHarga = props => (\r\n  <List title=\"Add/Update Pricings\" {...props}>\r\n    <GAMBAR />\r\n  </List>\r\n);\r\n","// in src/trashpurchase.js\r\nimport React from \"react\";\r\nimport { List, Datagrid, EmailField, TextField } from \"react-admin\";\r\n\r\nexport const trashpurchase = props => (\r\n  <List title=\"Trash Purchase List\" {...props}>\r\n    <Datagrid>\r\n      <TextField source=\"id\" />\r\n      <TextField source=\"name\" />\r\n      <TextField source=\"username\" />\r\n      <EmailField source=\"email\" />\r\n    </Datagrid>\r\n  </List>\r\n);\r\n","import React from \"react\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport CardHeader from \"@material-ui/core/CardHeader\";\r\nimport PersonAdd from \"@material-ui/icons/PersonAdd\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport {\r\n  TextField,\r\n  List,\r\n  DateField,\r\n  ReferenceField,\r\n  EditButton\r\n} from \"react-admin\";\r\n\r\nconst cardStyle = {\r\n  width: 300,\r\n  minHeight: 300,\r\n  margin: \"0.5em\",\r\n  display: \"inline-block\",\r\n  verticalAlign: \"top\"\r\n};\r\nconst CommentGrid = ({ ids, data, basePath }) => (\r\n  <div style={{ margin: \"1em\" }}>\r\n    {ids.map(id => (\r\n      <Card key={id} style={cardStyle}>\r\n        <CardHeader\r\n          title={<TextField record={data[id]} source=\"author.name\" />}\r\n          subheader={<DateField record={data[id]} source=\"created_at\" />}\r\n          avatar={<Avatar icon={<PersonAdd />} />}\r\n        />\r\n        <CardContent>\r\n          <TextField record={data[id]} source=\"body\" />\r\n        </CardContent>\r\n        <CardContent>\r\n          about&nbsp;\r\n          <ReferenceField\r\n            label=\"Post\"\r\n            resource=\"comments\"\r\n            record={data[id]}\r\n            source=\"post_id\"\r\n            reference=\"posts\"\r\n            basePath={basePath}\r\n          >\r\n            <TextField source=\"title\" />\r\n          </ReferenceField>\r\n        </CardContent>\r\n        <CardActions style={{ textAlign: \"right\" }}>\r\n          <EditButton resource=\"posts\" basePath={basePath} record={data[id]} />\r\n        </CardActions>\r\n      </Card>\r\n    ))}\r\n  </div>\r\n);\r\nCommentGrid.defaultProps = {\r\n  data: {},\r\n  ids: []\r\n};\r\n\r\nexport const CommentList = props => (\r\n  <List title=\"All comments\" {...props}>\r\n    <CommentGrid />\r\n  </List>\r\n);\r\n","// in src/users.js\r\nimport React from \"react\";\r\nimport {\r\n  List,\r\n  Edit,\r\n  Datagrid,\r\n  EmailField,\r\n  TextField,\r\n  Filter,\r\n  //Create,\r\n  TextInput,\r\n  ReferenceInput,\r\n  SelectInput,\r\n  SimpleForm,\r\n  LongTextInput,\r\n  SimpleList,\r\n  Responsive,\r\n  // EditButton,\r\n  // ShowButton,\r\n  // ReferenceField,\r\n  DisabledInput\r\n} from \"react-admin\";\r\n\r\nconst PostFilter = props => (\r\n  <Filter {...props}>\r\n    <TextInput label=\"Search\" source=\"q\" alwaysOn />\r\n    <ReferenceInput\r\n      label=\"Nama\"\r\n      source=\"nasabahId\"\r\n      reference=\"nasabah\"\r\n      allowEmpty\r\n    >\r\n      <SelectInput optionText=\"nama\" />\r\n    </ReferenceInput>\r\n  </Filter>\r\n);\r\n\r\nexport const Customers = props => (\r\n  <List title=\"All Customers\" {...props} filters={<PostFilter />}>\r\n    <Responsive\r\n      small={\r\n        <SimpleList\r\n          primaryText={record => record.nasabahId}\r\n          secondaryText={record => record.nama}\r\n          tertiaryText={record => record.hp}\r\n          //new Date(record.published_at).toLocaleDateString()\r\n        />\r\n      }\r\n      medium={\r\n        <Datagrid>\r\n          <TextField source=\"id\" />\r\n          <TextField source=\"nama\" />\r\n          <TextField source=\"alamat\" />\r\n          <TextField source=\"hp\" />\r\n          <EmailField source=\"email\" />\r\n        </Datagrid>\r\n      }\r\n    />\r\n  </List>\r\n);\r\nconst PostTitle = ({ record }) => {\r\n  return <span>Post {record ? `\"${record.title}\"` : \"\"}</span>;\r\n};\r\nexport const PostEdit = props => (\r\n  <Edit title={<PostTitle />} {...props}>\r\n    <SimpleForm>\r\n      <DisabledInput source=\"id\" />\r\n      <ReferenceInput label=\"Nama\" source=\"nasabahId\" reference=\"nasabah\">\r\n        <SelectInput optionText=\"nama\" />\r\n      </ReferenceInput>\r\n      <LongTextInput source=\"alamat\" />\r\n      <TextInput source=\"hp\" />\r\n      <TextInput source=\"email\" />\r\n    </SimpleForm>\r\n  </Edit>\r\n);\r\n\r\n// export const PostCreate = props => (\r\n//   <Create {...props}>\r\n//     <SimpleForm>\r\n//       <ReferenceInput label=\"Nama\" source=\"userId\" reference=\"users\">\r\n//         <SelectInput optionText=\"name\" />\r\n//       </ReferenceInput>\r\n//       <TextInput source=\"title\" />\r\n//       <LongTextInput source=\"body\" />\r\n//     </SimpleForm>\r\n//   </Create>\r\n// );\r\n","import React from \"react\";\r\nimport {\r\n  LineChart,\r\n  Line,\r\n  CartesianGrid,\r\n  XAxis,\r\n  YAxis,\r\n  Tooltip,\r\n  Legend\r\n} from \"recharts\";\r\nimport ResponsiveContainer from \"recharts/lib/component/ResponsiveContainer\";\r\n\r\nconst data = [\r\n  {\r\n    name: \"Jan\",\r\n    botolplastik: 400,\r\n    Kardus: 240,\r\n    Tembaga: 240,\r\n    Kaleng: 139,\r\n    Besi: 159,\r\n    Kaca: 159,\r\n    Kabel: 159\r\n  },\r\n  {\r\n    name: \"Feb\",\r\n    botolplastik: 300,\r\n    Kardus: 139,\r\n    Tembaga: 221,\r\n    Kaleng: 240,\r\n    Besi: 250,\r\n    Kaca: 250,\r\n    Kabel: 260\r\n  },\r\n  {\r\n    name: \"Mart\",\r\n    botolplastik: 200,\r\n    Kardus: 980,\r\n    Tembaga: 229,\r\n    Kaleng: 139,\r\n    Besi: 159,\r\n    Kaca: 159,\r\n    Kabel: 169\r\n  },\r\n  {\r\n    name: \"Apr\",\r\n    botolplastik: 298,\r\n    Kardus: 390,\r\n    Tembaga: 200,\r\n    Kaleng: 390,\r\n    Besi: 400,\r\n    Kaca: 500,\r\n    Kabel: 500\r\n  },\r\n  {\r\n    name: \"Mei\",\r\n    botolplastik: 389,\r\n    Kardus: 480,\r\n    Tembaga: 218,\r\n    Kaleng: 189,\r\n    Besi: 199,\r\n    Kaca: 199,\r\n    Kabel: 200\r\n  },\r\n  {\r\n    name: \"Jun\",\r\n    botolplastik: 239,\r\n    Kardus: 380,\r\n    Tembaga: 250,\r\n    Kaleng: 200,\r\n    Besi: 250,\r\n    Kaca: 260,\r\n    Kabel: 260\r\n  },\r\n  {\r\n    name: \"Jul\",\r\n    botolplastik: 400,\r\n    Kardus: 240,\r\n    Tembaga: 240,\r\n    Kaleng: 430,\r\n    Besi: 430,\r\n    Kaca: 430,\r\n    Kabel: 430\r\n  },\r\n  {\r\n    name: \"Ags\",\r\n    botolplastik: 300,\r\n    Kardus: 139,\r\n    Tembaga: 221,\r\n    Kaleng: 210,\r\n    Besi: 240,\r\n    Kaca: 250,\r\n    Kabel: 260\r\n  },\r\n  {\r\n    name: \"Sep\",\r\n    botolplastik: 500,\r\n    Kardus: 680,\r\n    Tembaga: 229,\r\n    Kaleng: 120,\r\n    Besi: 139,\r\n    Kaca: 149,\r\n    Kabel: 149\r\n  },\r\n  {\r\n    name: \"Okt\",\r\n    botolplastik: 278,\r\n    Kardus: 390,\r\n    Tembaga: 200,\r\n    Kaleng: 139,\r\n    Besi: 139,\r\n    Kaca: 159,\r\n    Kabel: 159\r\n  },\r\n  {\r\n    name: \"Nov\",\r\n    botolplastik: 378,\r\n    Kardus: 390,\r\n    Tembaga: 200,\r\n    Kaleng: 210,\r\n    Besi: 250,\r\n    Kaca: 270,\r\n    Kabel: 260\r\n  },\r\n  {\r\n    name: \"Des\",\r\n    botolplastik: 449,\r\n    Kardus: 430,\r\n    Tembaga: 210,\r\n    Kaleng: 139,\r\n    Besi: 149,\r\n    Kaca: 180,\r\n    Kabel: 160\r\n  }\r\n];\r\n\r\nfunction SimpleLineChart() {\r\n  return (\r\n    <ResponsiveContainer width=\"99%\" height={300}>\r\n      <LineChart\r\n        data={data}\r\n        margin={{ top: 20, right: 120, left: 1, bottom: 5 }}\r\n      >\r\n        <XAxis dataKey=\"name\" fontSize=\"11px\" />\r\n        <YAxis />\r\n        <CartesianGrid strokeDasharray=\"3 3\" />\r\n        <Tooltip />\r\n        <Legend />\r\n        <Line\r\n          type=\"monotone\"\r\n          dataKey=\"botolplastik\" // uv\r\n          stroke=\"#0000ff\"\r\n          activeDot={{ r: 8 }}\r\n        />\r\n        <Line type=\"monotone\" dataKey=\"Kardus\" stroke=\"#82ca9d\" />\r\n        <Line type=\"monotone\" dataKey=\"Tembaga\" stroke=\"#ff0000\" />\r\n        <Line type=\"monotone\" dataKey=\"Kaleng\" stroke=\"#2ca02c\" />\r\n        <Line type=\"monotone\" dataKey=\"Besi\" stroke=\"#9467bd\" />\r\n        <Line type=\"monotone\" dataKey=\"Kaca\" stroke=\"#8c564b\" />\r\n        <Line type=\"monotone\" dataKey=\"Kabel\" stroke=\"#e377c2\" />\r\n      </LineChart>\r\n    </ResponsiveContainer>\r\n  );\r\n}\r\n\r\nexport default SimpleLineChart;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { BarChart, Bar, XAxis, YAxis, CartesianGrid, Cell } from \"recharts\";\r\nimport ResponsiveContainer from \"recharts/lib/component/ResponsiveContainer\";\r\nconst colors = [\r\n  \"#ff0000\",\r\n  \"#82ca9d\",\r\n  \"#2ca02c\",\r\n  \"#9467bd\",\r\n  \"#0000ff\",\r\n  \"#8c564b\",\r\n  \"#e377c2\",\r\n  \"#7f7f7f\",\r\n  \"#bcbd22\",\r\n  \"#17becf\"\r\n];\r\nconst data = [\r\n  { name: \"Tembaga\", uv: 40, female: 24, male: 24 },\r\n  { name: \"Kardus\", uv: 30, female: 89, male: 22 },\r\n  { name: \"Kaleng\", uv: 20, female: 48, male: 22 },\r\n  { name: \"Besi Karat\", uv: 27, female: 39, male: 20 },\r\n  { name: \"Botol Plastik\", uv: 18, female: 69, male: 21 },\r\n  { name: \"Pecahan Kaca\", uv: 23, female: 38, male: 25 },\r\n  { name: \"Kabel Bekas\", uv: 34, female: 43, male: 21 }\r\n];\r\n\r\nconst getPath = (x, y, width, height) => {\r\n  return `M${x},${y + height}\r\n          C${x + width / 3},${y + height} ${x + width / 2},${y +\r\n    height / 3} ${x + width / 2}, ${y}\r\n          C${x + width / 2},${y + height / 3} ${x + (2 * width) / 3},${y +\r\n    height} ${x + width}, ${y + height}\r\n          Z`;\r\n};\r\n\r\nconst TriangleBar = props => {\r\n  const { fill, x, y, width, height } = props;\r\n\r\n  return <path d={getPath(x, y, width, height)} stroke=\"none\" fill={fill} />;\r\n};\r\n\r\nTriangleBar.propTypes = {\r\n  fill: PropTypes.string,\r\n  x: PropTypes.number,\r\n  y: PropTypes.number,\r\n  width: PropTypes.number,\r\n  height: PropTypes.number\r\n};\r\n\r\nfunction CustomShapeBarChart() {\r\n  return (\r\n    <ResponsiveContainer width=\"99%\" height={300}>\r\n      <BarChart\r\n        data={data}\r\n        margin={{ top: 20, right: 0.1, left: 1, bottom: 5 }}\r\n      >\r\n        <XAxis dataKey=\"name\" />\r\n        <YAxis />\r\n        <CartesianGrid strokeDasharray=\"3 3\" />\r\n        <Bar\r\n          dataKey=\"female\"\r\n          fill=\"#8884d8\"\r\n          shape={<TriangleBar />}\r\n          label={{ position: \"top\" }}\r\n        >\r\n          {data.map((entry, index) => (\r\n            <Cell key={`cell-${index}`} fill={colors[index % 20]} />\r\n          ))}\r\n        </Bar>\r\n      </BarChart>\r\n    </ResponsiveContainer>\r\n  );\r\n}\r\n\r\nexport default CustomShapeBarChart;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { BarChart, Bar, XAxis, YAxis, CartesianGrid, Cell } from \"recharts\";\r\nimport ResponsiveContainer from \"recharts/lib/component/ResponsiveContainer\";\r\nconst colors = [\r\n  \"#ff0000\",\r\n  \"#82ca9d\",\r\n  \"#2ca02c\",\r\n  \"#9467bd\",\r\n  \"#0000ff\",\r\n  \"#8c564b\",\r\n  \"#e377c2\",\r\n  \"#7f7f7f\",\r\n  \"#bcbd22\",\r\n  \"#17becf\"\r\n];\r\nconst data = [\r\n  { name: \"Tembaga\", uv: 40, female: 24, male: 24 },\r\n  { name: \"Kardus\", uv: 30, female: 89, male: 22 },\r\n  { name: \"Kaleng\", uv: 20, female: 48, male: 22 },\r\n  { name: \"Besi Karat\", uv: 27, female: 39, male: 20 },\r\n  { name: \"Botol Plastik\", uv: 18, female: 69, male: 21 },\r\n  { name: \"Pecahan Kaca\", uv: 23, female: 38, male: 25 },\r\n  { name: \"Kabel Bekas\", uv: 34, female: 43, male: 21 }\r\n];\r\n\r\nconst getPath = (x, y, width, height) => {\r\n  return `M${x},${y + height}\r\n          C${x + width / 3},${y + height} ${x + width / 2},${y +\r\n    height / 3} ${x + width / 2}, ${y}\r\n          C${x + width / 2},${y + height / 3} ${x + (2 * width) / 3},${y +\r\n    height} ${x + width}, ${y + height}\r\n          Z`;\r\n};\r\n\r\nconst TriangleBar = props => {\r\n  const { fill, x, y, width, height } = props;\r\n\r\n  return <path d={getPath(x, y, width, height)} stroke=\"none\" fill={fill} />;\r\n};\r\n\r\nTriangleBar.propTypes = {\r\n  fill: PropTypes.string,\r\n  x: PropTypes.number,\r\n  y: PropTypes.number,\r\n  width: PropTypes.number,\r\n  height: PropTypes.number\r\n};\r\n\r\nfunction CustomShapeBarChartss() {\r\n  return (\r\n    <ResponsiveContainer width=\"99%\" height={300}>\r\n      <BarChart data={data} margin={{ top: 20, right: 10, left: 1, bottom: 5 }}>\r\n        <XAxis dataKey=\"name\" />\r\n        <YAxis />\r\n        <CartesianGrid strokeDasharray=\"3 3\" />\r\n        <Bar\r\n          dataKey=\"female\"\r\n          fill=\"#8884d8\"\r\n          shape={<TriangleBar />}\r\n          label={{ position: \"top\" }}\r\n        >\r\n          {data.map((entry, index) => (\r\n            <Cell key={`cell-${index}`} fill={colors[index % 20]} />\r\n          ))}\r\n        </Bar>\r\n\r\n        <Bar\r\n          dataKey=\"male\"\r\n          fill=\"#bcbd22\"\r\n          shape={<TriangleBar />}\r\n          label={{ position: \"top\" }}\r\n        >\r\n          {data.map((entry, index) => (\r\n            <Cell key={`cell-${index}`} fill={colors[index % 20]} />\r\n          ))}\r\n        </Bar>\r\n      </BarChart>\r\n    </ResponsiveContainer>\r\n  );\r\n}\r\n\r\nexport default CustomShapeBarChartss;\r\n","import React from \"react\";\r\nimport {\r\n  ComposedChart,\r\n  Area,\r\n  Line,\r\n  Bar,\r\n  XAxis,\r\n  YAxis,\r\n  CartesianGrid,\r\n  Tooltip,\r\n  Legend,\r\n  ResponsiveContainer\r\n} from \"recharts\";\r\n\r\nconst data = [\r\n  { name: \"Januari\", organik: 590, non_organik: 800, kimia: 1400 },\r\n  { name: \"Februari\", organik: 868, non_organik: 967, kimia: 1506 },\r\n  { name: \"Maret\", organik: 1397, non_organik: 1098, kimia: 989 },\r\n  { name: \"April\", organik: 1480, non_organik: 1200, kimia: 1228 },\r\n  { name: \"Mei\", organik: 1520, non_organik: 1108, kimia: 1100 },\r\n  { name: \"Juni\", organik: 1400, non_organik: 680, kimia: 1700 }\r\n];\r\n\r\nfunction randomChart() {\r\n  return (\r\n    <ResponsiveContainer\r\n      width=\"99%\"\r\n      height={200}\r\n      margin={{ top: 20, right: 85, bottom: 20, left: 20 }}\r\n    >\r\n      <ComposedChart data={data}>\r\n        <XAxis dataKey=\"name\" />\r\n        <YAxis />\r\n        <Tooltip />\r\n        <Legend />\r\n        <CartesianGrid stroke=\"#f5f5f5\" />\r\n        <Area\r\n          type=\"monotone\"\r\n          dataKey=\"organik\"\r\n          fill=\"#8884d8\"\r\n          stroke=\"#8884d8\"\r\n        />\r\n        <Bar dataKey=\"non_organik\" barSize={20} fill=\"#413ea0\" />\r\n        <Line type=\"monotone\" dataKey=\"kimia\" stroke=\"#ff7300\" />\r\n      </ComposedChart>\r\n    </ResponsiveContainer>\r\n  );\r\n}\r\n\r\nexport default randomChart;\r\n","// in src/Dashboard.js\r\nimport React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport SimpleLineChart from \"../components/linecharts\";\r\nimport CustomShapeBarChart from \"../components/barcharts\";\r\nimport CustomShapeBarChartss from \"../components/barchartss\";\r\nimport Randomcharts from \"../components/randomcharts\";\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    flexGrow: 1\r\n  },\r\n  paper: {\r\n    padding: theme.spacing.unit * 2,\r\n    textAlign: \"center\",\r\n    fontWeight: \"Bold\",\r\n    color: theme.palette.text.secondary\r\n  },\r\n  pont: {\r\n    fontSize: \"30px\",\r\n    fontWeight: \"Bold\",\r\n    padding: theme.spacing.unit * 2,\r\n    textAlign: \"center\"\r\n  },\r\n  line: {\r\n    position: \"right\"\r\n  }\r\n});\r\n\r\nfunction CenteredGrid(props) {\r\n  const { classes } = props;\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Grid container spacing={24}>\r\n        <Grid item xs={12}>\r\n          <Paper className={classes.pont}>\r\n            Info Grafis Bank Sampah Perjuangan{\" \"}\r\n          </Paper>\r\n        </Grid>\r\n\r\n        <Grid item xs={12}>\r\n          <Paper className={classes.paper}>\r\n            Total Pembelian Berdasarkan Type-Sampah (Perminggu){\" \"}\r\n            <CustomShapeBarChart />{\" \"}\r\n          </Paper>\r\n        </Grid>\r\n\r\n        <Grid item xs={12}>\r\n          <Paper className={classes.paper}>\r\n            Total Pembelian Berdasarkan Jumlah Nasabah (Perminggu){\" \"}\r\n            <CustomShapeBarChartss />{\" \"}\r\n          </Paper>\r\n        </Grid>\r\n\r\n        <Grid item xs={12}>\r\n          <Paper className={classes.paper}>\r\n            Info Grafik Pembelian Berdasarkan Type Sampah (Kg){\" \"}\r\n            <SimpleLineChart />{\" \"}\r\n          </Paper>\r\n        </Grid>\r\n\r\n        <Grid item xs={12}>\r\n          <Paper className={classes.paper}>\r\n            Persentase Pembelian Type Sampah <Randomcharts />{\" \"}\r\n          </Paper>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n\r\nCenteredGrid.PropTypes = {\r\n  classes: PropTypes.object.isRequired\r\n};\r\n\r\nexport default withStyles(styles)(CenteredGrid);\r\n","// in src/authProvider.js\r\nimport { AUTH_LOGIN, AUTH_LOGOUT, AUTH_ERROR, AUTH_CHECK } from \"react-admin\";\r\n\r\nexport default (type, params) => {\r\n  // called when the user attempts to log in\r\n  if (type === AUTH_LOGIN) {\r\n    const { username } = params;\r\n    localStorage.setItem(\"username\", username);\r\n    // accept all username/password combinations\r\n    return Promise.resolve();\r\n  }\r\n  // called when the user clicks on the logout button\r\n  if (type === AUTH_LOGOUT) {\r\n    localStorage.removeItem(\"username\");\r\n    return Promise.resolve();\r\n  }\r\n  // called when the API returns an error\r\n  if (type === AUTH_ERROR) {\r\n    const { status } = params;\r\n    if (status === 401 || status === 403) {\r\n      localStorage.removeItem(\"username\");\r\n      return Promise.reject();\r\n    }\r\n    return Promise.resolve();\r\n  }\r\n  // called when the user navigates to a new location\r\n  if (type === AUTH_CHECK) {\r\n    return localStorage.getItem(\"username\")\r\n      ? Promise.resolve()\r\n      : Promise.reject();\r\n  }\r\n  return Promise.reject(\"Unknown method\");\r\n};\r\n","// in src/App.js\nimport React from \"react\";\nimport { Admin, Resource } from \"react-admin\";\nimport { PostList, PostEdit, PostCreate } from \"./Menu/posts\";\nimport { UserList } from \"./Menu/users\";\nimport { ChekTransaksi, TranShow } from \"./Menu/transactions\";\nimport { ItemList } from \"./Menu/Items\";\nimport { ScheduleList } from \"./Menu/schedules\";\nimport { MyAccount } from \"./Menu/MyAccount\";\nimport { UpdateHarga } from \"./Menu/UpdateHarga\";\nimport { trashpurchase } from \"./Menu/TrashPurchase\";\nimport { createMuiTheme } from \"@material-ui/core/styles\";\nimport { CommentList } from \"./Menu/comments.js\";\nimport { Customers } from \"./Menu/customers.js\";\nimport index from \"@material-ui/core/colors/index\";\nimport Dashboard from \"./Menu/Dashboard\";\nimport authProvider from \"./authProvider\";\n//import dataProvider from './dataProvider';\nimport jsonServerProvider from \"ra-data-json-server\";\n//import simpleRestProvider from \"ra-data-json-server\";\nimport PostIcon from \"@material-ui/icons/Book\";\nimport UserIcon from \"@material-ui/icons/Group\";\nimport AddShoppingCart from \"@material-ui/icons/AddShoppingCart\";\nimport List from \"@material-ui/icons/List\";\nimport DateRange from \"@material-ui/icons/DateRange\";\nimport AccountBox from \"@material-ui/icons/AccountBox\";\nimport PersonAdd from \"@material-ui/icons/PersonAdd\";\nimport AddCircleOutline from \"@material-ui/icons/AddCircleOutline\";\n//import { formatMs } from \"@material-ui/core/styles/transitions\";\n\nconst dataProvider = jsonServerProvider(\n  \"https://my-json-server.typicode.com/dodinurkasih/jsonserver\"\n);\n// \"https://my-json-server.typicode.com/dodinurkasih/jsonserver\"\nconst theme = createMuiTheme({\n  palette: {\n    primary: index,\n    secondary: {\n      main: \"#00e5ff\"\n    }\n  }\n});\n\nconst App = () => (\n  <Admin\n    title\n    theme={theme}\n    dashboard={Dashboard}\n    authProvider={authProvider}\n    dataProvider={dataProvider}\n  >\n    <Resource\n      name=\"posts\"\n      list={PostList}\n      edit={PostEdit}\n      create={PostCreate}\n      icon={PostIcon}\n    />\n    <Resource name=\"users\" list={UserList} icon={UserIcon} />\n    <Resource name=\"customers\" list={Customers} icon={UserIcon} />\n    <Resource\n      name=\"transactions\"\n      show={TranShow}\n      list={ChekTransaksi}\n      icon={AddShoppingCart}\n    />\n    <Resource name=\"stransaksi\" />\n    <Resource name=\"Items\" list={ItemList} icon={List} />\n    <Resource name=\"schedules\" list={ScheduleList} icon={DateRange} />\n    <Resource name=\"MyAccount\" list={MyAccount} icon={AccountBox} />\n    <Resource\n      name=\"Add/Update Pricing\"\n      list={UpdateHarga}\n      icon={AddCircleOutline}\n    />\n    <Resource name=\"Trash Purchase\" list={trashpurchase} icon={AccountBox} />\n    <Resource name=\"comment\" list={CommentList} icon={PersonAdd} />\n  </Admin>\n);\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}