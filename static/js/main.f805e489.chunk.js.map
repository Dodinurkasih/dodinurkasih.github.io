{"version":3,"sources":["Menu/transactions.js","Menu/schedules.js","Menu/MyAccount.js","Menu/UpdateHarga.js","Menu/TrashPurchase.js","Menu/customers.js","components/linecharts.js","components/barcharts.js","components/barchartss.js","components/randomcharts.js","components/piecharts.js","components/donutcharts.js","components/pietreecharts.js","Menu/Dashboard.js","authProvider.js","App.js","serviceWorker.js","index.js"],"names":["PostFilter","props","react_default","a","createElement","Filter","TextInput","label","source","alwaysOn","ReferenceInput","reference","allowEmpty","SelectInput","optionText","ChekTransaksi","List","Object","assign","title","filters","transactions_PostFilter","Responsive","small","SimpleList","primaryText","record","jenissampah","secondaryText","jumlahsampah","tertiaryText","tanggal","medium","Datagrid","TextField","ReferenceField","ShowButton","TranShow","Show","SimpleShowLayout","TabbedShowLayout","Tab","path","type","DateField","NumberField","BooleanField","defaultValue","ReferenceManyField","target","addLabel","EditButton","ScheduleList","EmailField","cardStyle","width","minHeight","margin","display","verticalAlign","CommentGrid","_ref","ids","data","basePath","style","map","accountId","Card_default","key","CardHeader_default","avatar","Avatar_default","icon","AccountBox_default","CardContent_default","CardActions_default","textAlign","resource","defaultProps","MyaccountList","MyAccount_CommentGrid","GAMBAR","id","PersonAdd_default","UpdateHarga","UpdateHarga_GAMBAR","trashpurchase","Customers","customers_PostFilter","nama","hp","alamat","name","botolplastik","Kardus","Tembaga","Kaleng","Besi","Kaca","Kabel","SimpleLineChart","ResponsiveContainer_default","height","LineChart","top","right","left","bottom","XAxis","dataKey","fontSize","YAxis","CartesianGrid","strokeDasharray","Tooltip","Legend","Line","stroke","activeDot","r","colors","uv","female","male","TriangleBar","fill","x","y","d","concat","getPath","CustomShapeBarChart","BarChart","Bar","shape","barcharts_TriangleBar","position","entry","index","Cell","CustomShapeBarChartss","barchartss_TriangleBar","organik","non_organik","kimia","randomChart","component_ResponsiveContainer","ComposedChart","Area","barSize","charts","FusionCharts","dataSource","chart","showlegend","showpercentvalues","legendposition","usedataplotcolorforlabels","theme","value","PieChart","ReactFC_default","dataFormat","React","Component","defaultcenterlabel","aligncaptionwithcanvas","captionpadding","decimals","plottooltext","centerlabel","Donutcharts","showvalues","showpercentintooltip","numberprefix","enablemultislicing","Pietreecharts","CenteredGrid","classes","className","root","Grid_default","container","spacing","item","xs","Paper_default","pont","paper","barcharts","barchartss","linecharts","randomcharts","pietreecharts","piecharts","donutcharts","PropTypes","object","isRequired","withStyles","flexGrow","padding","unit","fontWeight","color","palette","text","secondary","line","authProvider","params","AUTH_LOGOUT","localStorage","removeItem","Promise","resolve","dataProvider","jsonServerProvider","createMuiTheme","primary","main","App","Admin","dashboard","Dashboard","Resource","list","UserIcon","options","show","AddShoppingCart","DateRange","AccountBox","AddCircleOutline","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.f805e489.chunk.js","sourcesContent":["// in src/users.js\r\nimport React from \"react\";\r\nimport {\r\n  List,\r\n  Datagrid,\r\n  TextField,\r\n  Filter,\r\n  TextInput,\r\n  ReferenceInput,\r\n  SelectInput,\r\n  SimpleList,\r\n  Responsive,\r\n  ReferenceField,\r\n  Show,\r\n  SimpleShowLayout,\r\n  DateField,\r\n  ShowButton,\r\n  TabbedShowLayout,\r\n  Tab,\r\n  //RichTextField,\r\n  NumberField,\r\n  BooleanField,\r\n  ReferenceManyField,\r\n  EditButton\r\n} from \"react-admin\";\r\n\r\nconst PostFilter = props => (\r\n  <Filter {...props}>\r\n    <TextInput label=\"Search\" source=\"q\" alwaysOn />\r\n    <ReferenceInput\r\n      label=\"Status\"\r\n      source=\"statusId\"\r\n      reference=\"stransaksi\"\r\n      allowEmpty\r\n    >\r\n      <SelectInput optionText=\"status\" />\r\n    </ReferenceInput>\r\n  </Filter>\r\n);\r\n\r\nexport const ChekTransaksi = props => (\r\n  <List title=\"Check Transaction\" {...props} filters={<PostFilter />}>\r\n    <Responsive\r\n      small={\r\n        <SimpleList\r\n          primaryText={record => record.jenissampah}\r\n          secondaryText={record => record.jumlahsampah}\r\n          tertiaryText={\r\n            record => record.tanggal\r\n            // new Date(record.published_at).toLocaleDateString()\r\n          }\r\n        />\r\n      }\r\n      medium={\r\n        <Datagrid>\r\n          <TextField source=\"id\" />\r\n\r\n          <ReferenceField\r\n            label=\"Penjual\"\r\n            source=\"customerId\"\r\n            reference=\"customers\"\r\n          >\r\n            <TextField label=\"Nama Penjual\" source=\"nama\" />\r\n          </ReferenceField>\r\n\r\n          <TextField label=\"Jenis Sampah\" source=\"jenissampah\" />\r\n          <TextField label=\"Jumlah Sampah\" source=\"jumlahsampah\" />\r\n          <TextField source=\"tanggal\" />\r\n\r\n          <ReferenceField\r\n            label=\"Status Transaksi\"\r\n            source=\"statusId\"\r\n            reference=\"stransaksi\"\r\n          >\r\n            <TextField source=\"status\" />\r\n          </ReferenceField>\r\n\r\n          <ShowButton />\r\n        </Datagrid>\r\n      }\r\n    />\r\n  </List>\r\n);\r\n\r\nexport const TranShow = props => (\r\n  <Show {...props}>\r\n    <SimpleShowLayout>\r\n      <ReferenceField label=\"Penjual\" source=\"customerId\" reference=\"customers\">\r\n        <TextField source=\"nama\" />\r\n      </ReferenceField>\r\n\r\n      <ReferenceField label=\"No.HP\" source=\"customerId\" reference=\"customers\">\r\n        <TextField source=\"hp\" />\r\n      </ReferenceField>\r\n\r\n      <ReferenceField label=\"Alamat\" source=\"customerId\" reference=\"customers\">\r\n        <TextField source=\"alamat\" />\r\n      </ReferenceField>\r\n\r\n      <TextField label=\"Jenis Sampah\" source=\"jenissampah\" />\r\n      <TextField label=\"Harga Sampah\" source=\"hargasampah\" />\r\n      <TextField label=\"Tanggal\" source=\"tanggal\" />\r\n\r\n      <ReferenceField label=\"Status\" source=\"statusId\" reference=\"stransaksi\">\r\n        <TextField source=\"status\" />\r\n      </ReferenceField>\r\n\r\n      <TabbedShowLayout>\r\n        <Tab label=\"Detail Penjual\">\r\n          <ReferenceField\r\n            label=\"Penjual\"\r\n            source=\"customerId\"\r\n            reference=\"customers\"\r\n          >\r\n            <TextField source=\"nama\" />\r\n          </ReferenceField>\r\n\r\n          <ReferenceField\r\n            label=\"No.HP\"\r\n            source=\"customerId\"\r\n            reference=\"customers\"\r\n          >\r\n            <TextField source=\"hp\" />\r\n          </ReferenceField>\r\n\r\n          <ReferenceField\r\n            label=\"Alamat\"\r\n            source=\"customerId\"\r\n            reference=\"customers\"\r\n          >\r\n            <TextField source=\"alamat\" />\r\n          </ReferenceField>\r\n        </Tab>\r\n\r\n        <Tab label=\"Detail Barang\">\r\n          <TextField label=\"Jenis Sampah\" source=\"jenissampah\" />\r\n          <TextField label=\"Jumlah Sampah\" source=\"jumlahsampah\" />\r\n          <TextField source=\"tanggal\" />\r\n        </Tab>\r\n\r\n        <Tab label=\"Miscellaneous\" path=\"miscellaneous\">\r\n          <TextField\r\n            label=\"Password (if protected post)\"\r\n            source=\"password\"\r\n            type=\"password\"\r\n          />\r\n          <DateField label=\"Publication date\" source=\"published_at\" />\r\n          <NumberField source=\"average_note\" />\r\n          <BooleanField\r\n            label=\"Allow comments?\"\r\n            source=\"commentable\"\r\n            defaultValue\r\n          />\r\n          <TextField label=\"Nb views\" source=\"views\" />\r\n        </Tab>\r\n        <Tab label=\"comments\" path=\"comments\">\r\n          <ReferenceManyField\r\n            reference=\"comments\"\r\n            target=\"post_id\"\r\n            addLabel={false}\r\n          >\r\n            <Datagrid>\r\n              <TextField source=\"body\" />\r\n              <DateField source=\"created_at\" />\r\n              <EditButton />\r\n            </Datagrid>\r\n          </ReferenceManyField>\r\n        </Tab>\r\n      </TabbedShowLayout>\r\n    </SimpleShowLayout>\r\n  </Show>\r\n);\r\n","import React from \"react\";\r\nimport { List, Datagrid, EmailField, TextField } from \"react-admin\";\r\n\r\nexport const ScheduleList = props => (\r\n  <List title=\"Schedule Pickup\" {...props}>\r\n    <Datagrid>\r\n      <TextField source=\"id\" />\r\n      <TextField source=\"name\" />\r\n      <TextField source=\"username\" />\r\n      <EmailField source=\"email\" />\r\n    </Datagrid>\r\n  </List>\r\n);\r\n","// in src/comments.js\r\nimport React from \"react\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport CardHeader from \"@material-ui/core/CardHeader\";\r\nimport AccountBox from \"@material-ui/icons/AccountBox\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport { TextField, EditButton, List } from \"react-admin\";\r\n\r\nconst cardStyle = {\r\n  width: 300,\r\n  minHeight: 300,\r\n  margin: \"0.5em\",\r\n  display: \"inline-block\",\r\n  verticalAlign: \"top\"\r\n};\r\n\r\nconst CommentGrid = ({ ids, data, basePath }) => (\r\n  <div style={{ margin: \"1em\" }}>\r\n    {ids.map(accountId => (\r\n      <Card key={accountId} style={cardStyle}>\r\n        <CardHeader\r\n          title=\"MyAccounts\"\r\n          //subheader={<DateField record={data[accountId]} source=\"namabank\" />}\r\n          avatar={<Avatar icon={<AccountBox />} />}\r\n        />\r\n        <CardContent>\r\n          Nama :<TextField record={data[accountId]} source=\"nama\" />\r\n          Nama Bank :<TextField record={data[accountId]} source=\"namabank\" />\r\n          Alamat :<TextField record={data[accountId]} source=\"alamat\" />\r\n          HandPhone :<TextField record={data[accountId]} source=\"hp\" />\r\n          Total Pembelian :\r\n          <TextField record={data[accountId]} source=\"totalpembelian\" />\r\n          {/* <ReferenceField\r\n            label=\"Post\"\r\n            resource=\"comments\"\r\n            record={data[id]}\r\n            source=\"post_id\"\r\n            reference=\"posts\"\r\n            basePath={basePath}\r\n          >\r\n            <TextField source=\"title\" />\r\n          </ReferenceField> */}\r\n        </CardContent>\r\n        <CardActions style={{ textAlign: \"right\" }}>\r\n          <EditButton\r\n            resource=\"myaccounts\"\r\n            basePath={basePath}\r\n            record={data[accountId]}\r\n          />\r\n        </CardActions>\r\n      </Card>\r\n    ))}\r\n  </div>\r\n);\r\nCommentGrid.defaultProps = {\r\n  data: {},\r\n  ids: []\r\n};\r\n\r\nexport const MyaccountList = props => (\r\n  <List title=\"My Account\" {...props}>\r\n    <CommentGrid />\r\n  </List>\r\n);\r\n","// in src/UpdateHarga.js\r\n// import React from \"react\";\r\n// import { List, Datagrid, EmailField, TextField } from \"react-admin\";\r\n\r\n// export const UpdateHarga = props => (\r\n//   <List title=\"add/update pricing\" {...props}>\r\n//     <Datagrid>\r\n//       <TextField source=\"id\" />\r\n//       <TextField source=\"name\" />\r\n//       <TextField source=\"username\" />\r\n//       <EmailField source=\"email\" />\r\n//     </Datagrid>\r\n//   </List>\r\n// );\r\n\r\nimport React from \"react\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport CardText from \"@material-ui/core/CardContent\";\r\nimport CardHeader from \"@material-ui/core/CardHeader\";\r\nimport {\r\n  List,\r\n  TextField,\r\n  //DateField,\r\n  EditButton,\r\n  ReferenceField\r\n} from \"react-admin\";\r\nimport PersonAdd from \"@material-ui/icons/PersonAdd\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\n\r\nconst cardStyle = {\r\n  width: 300,\r\n  minHeight: 300,\r\n  margin: \"0.5em\",\r\n  display: \"inline-block\",\r\n  verticalAlign: \"top\"\r\n};\r\nconst GAMBAR = ({ ids, data, basePath }) => (\r\n  <div style={{ margin: \"1em\" }}>\r\n    {ids.map(id => (\r\n      <Card key={id} style={cardStyle}>\r\n        <CardHeader\r\n          title={<TextField record={data[id]} source=\"nama\" />}\r\n          //subtitle={<DateField record={data[id]} source=\"created_at\" />}\r\n          avatar={<Avatar icon={<PersonAdd />} />}\r\n        />\r\n        <CardText>\r\n          <TextField record={data[id]} source=\"namabank\" />\r\n        </CardText>\r\n        <CardText>\r\n          about&nbsp;\r\n          <ReferenceField\r\n            label=\"MyAccount\"\r\n            resource=\"alamat\"\r\n            record={data[id]}\r\n            // source=\"post_id\"\r\n            // reference=\"posts\"\r\n            basePath={basePath}\r\n          >\r\n            <TextField source=\"hp\" />\r\n          </ReferenceField>\r\n        </CardText>\r\n        <CardActions style={{ textAlign: \"right\" }}>\r\n          <EditButton\r\n            resource=\"myaccounts\"\r\n            basePath={basePath}\r\n            record={data[id]}\r\n          />\r\n        </CardActions>\r\n      </Card>\r\n    ))}\r\n  </div>\r\n);\r\n\r\n//     <Card style={cardStyle}>\r\n//       <CardHeader title=\"MyAccount\"\r\n//         avatar={<Avatar icon={<PersonIcon />} />}\r\n//       />\r\n//       <CardContent>INI GAMBAR SAMPAH</CardContent>\r\n//       <CardContent>sssss about&nbsp;</CardContent>\r\n//       <CardActions style={{ textAlign: \"right\" }} />\r\n//       )}\r\n//     </Card>\r\n\r\n//     // <Card style={cardStyle}>\r\n//     //   <CardHeader title=\"Kardus\" />\r\n//     //   <CardContent>INI GAMBAR SAMPAH</CardContent>\r\n//     //   <CardContent>sssss about&nbsp;</CardContent>\r\n//     //   <CardActions style={{ textAlign: \"right\" }} />\r\n//     // </Card>\r\n\r\n//     // <Card style={cardStyle}>\r\n//     //   <CardHeader title=\"Botol AQua\" />\r\n//     //   <CardContent>\r\n//     //     <TextField source=\"id\" />\r\n//     //   </CardContent>\r\n//     //   <CardContent>sssss about&nbsp;</CardContent>\r\n//     //   <CardActions style={{ textAlign: \"right\" }} />\r\n//     // </Card>\r\n\r\n//     // <Card style={cardStyle}>\r\n//     //   <CardHeader title=\"lcnskjdcnasc\" />\r\n//     //   <CardContent>INI GAMBAR SAMPAH</CardContent>\r\n//     //   <CardContent>sssss about&nbsp;</CardContent>\r\n//     //   <CardActions style={{ textAlign: \"right\" }} />\r\n//     // </Card>\r\n\r\n//     // <Card style={cardStyle}>\r\n//     //   <CardHeader title=\"asdfnksjbc\" />\r\n//     //   <CardContent>INI GAMBAR SAMPAH</CardContent>\r\n//     //   <CardContent>sssss about&nbsp;</CardContent>\r\n//     //   <CardActions style={{ textAlign: \"right\" }} />\r\n//     // </Card>\r\n\r\n//     // <Card style={cardStyle}>\r\n//     //   <CardHeader title=\"asdfnksjbc\" />\r\n//     //   <CardContent>INI GAMBAR SAMPAH</CardContent>\r\n//     //   <CardContent>sssss about&nbsp;</CardContent>\r\n//     //   <CardActions style={{ textAlign: \"right\" }} />\r\n//     // </Card>\r\n//   </div>\r\n// );\r\n\r\nexport const UpdateHarga = props => (\r\n  <List title=\"Add/Update Pricings\" {...props}>\r\n    <GAMBAR />\r\n  </List>\r\n);\r\n","// in src/trashpurchase.js\r\nimport React from \"react\";\r\nimport { List, Datagrid, EmailField, TextField } from \"react-admin\";\r\n\r\nexport const trashpurchase = props => (\r\n  <List title=\"Trash Purchase List\" {...props}>\r\n    <Datagrid>\r\n      <TextField source=\"id\" />\r\n      <TextField source=\"name\" />\r\n      <TextField source=\"username\" />\r\n      <EmailField source=\"email\" />\r\n    </Datagrid>\r\n  </List>\r\n);\r\n","// in src/users.js\r\nimport React from \"react\";\r\nimport {\r\n  List,\r\n  Edit,\r\n  Datagrid,\r\n  EmailField,\r\n  TextField,\r\n  Filter,\r\n  //Create,\r\n  TextInput,\r\n  ReferenceInput,\r\n  SelectInput,\r\n  SimpleForm,\r\n  //LongTextInput,\r\n  SimpleList,\r\n  Responsive,\r\n  // EditButton,\r\n  // ShowButton,\r\n  // ReferenceField,\r\n  DisabledInput\r\n} from \"react-admin\";\r\n\r\nconst PostFilter = props => (\r\n  <Filter {...props}>\r\n    <TextInput label=\"Search\" source=\"q\" alwaysOn />\r\n    <ReferenceInput\r\n      label=\"Nama\"\r\n      source=\"nasabahId\"\r\n      reference=\"nasabah\"\r\n      allowEmpty\r\n    >\r\n      <SelectInput optionText=\"nama\" />\r\n    </ReferenceInput>\r\n  </Filter>\r\n);\r\n\r\nexport const Customers = props => (\r\n  <List title=\"All Customers\" {...props} filters={<PostFilter />}>\r\n    <Responsive\r\n      small={\r\n        <SimpleList\r\n          primaryText={record => record.nama}\r\n          secondaryText={record => record.hp}\r\n          tertiaryText={record => record.alamat}\r\n          //new Date(record.published_at).toLocaleDateString()\r\n        />\r\n      }\r\n      medium={\r\n        <Datagrid>\r\n          <TextField source=\"id\" />\r\n          <TextField source=\"nama\" />\r\n          <TextField source=\"alamat\" />\r\n          <TextField source=\"hp\" />\r\n          <EmailField source=\"email\" />\r\n        </Datagrid>\r\n      }\r\n    />\r\n  </List>\r\n);\r\nconst PostTitle = ({ record }) => {\r\n  return <span>Post {record ? `\"${record.title}\"` : \"\"}</span>;\r\n};\r\nexport const PostEdit = props => (\r\n  <Edit title={<PostTitle />} {...props}>\r\n    <SimpleForm>\r\n      <DisabledInput source=\"id\" />\r\n      <ReferenceInput label=\"Nama\" source=\"nasabahId\" reference=\"nasabah\">\r\n        <SelectInput optionText=\"nama\" />\r\n      </ReferenceInput>\r\n      <TextInput source=\"alamat\" />\r\n      <TextInput source=\"hp\" />\r\n      <TextInput source=\"email\" />\r\n    </SimpleForm>\r\n  </Edit>\r\n);\r\n\r\n// export const PostCreate = props => (\r\n//   <Create {...props}>\r\n//     <SimpleForm>\r\n//       <ReferenceInput label=\"Nama\" source=\"userId\" reference=\"users\">\r\n//         <SelectInput optionText=\"name\" />\r\n//       </ReferenceInput>\r\n//       <TextInput source=\"title\" />\r\n//       <LongTextInput source=\"body\" />\r\n//     </SimpleForm>\r\n//   </Create>\r\n// );\r\n","import React from \"react\";\r\nimport {\r\n  LineChart,\r\n  Line,\r\n  CartesianGrid,\r\n  XAxis,\r\n  YAxis,\r\n  Tooltip,\r\n  Legend\r\n} from \"recharts\";\r\nimport ResponsiveContainer from \"recharts/lib/component/ResponsiveContainer\";\r\n\r\nconst data = [\r\n  {\r\n    name: \"Jan\",\r\n    botolplastik: 400,\r\n    Kardus: 240,\r\n    Tembaga: 240,\r\n    Kaleng: 139,\r\n    Besi: 159,\r\n    Kaca: 159,\r\n    Kabel: 159\r\n  },\r\n  {\r\n    name: \"Feb\",\r\n    botolplastik: 300,\r\n    Kardus: 139,\r\n    Tembaga: 221,\r\n    Kaleng: 240,\r\n    Besi: 250,\r\n    Kaca: 250,\r\n    Kabel: 260\r\n  },\r\n  {\r\n    name: \"Mart\",\r\n    botolplastik: 200,\r\n    Kardus: 980,\r\n    Tembaga: 229,\r\n    Kaleng: 139,\r\n    Besi: 159,\r\n    Kaca: 159,\r\n    Kabel: 169\r\n  },\r\n  {\r\n    name: \"Apr\",\r\n    botolplastik: 298,\r\n    Kardus: 390,\r\n    Tembaga: 200,\r\n    Kaleng: 390,\r\n    Besi: 400,\r\n    Kaca: 500,\r\n    Kabel: 500\r\n  },\r\n  {\r\n    name: \"Mei\",\r\n    botolplastik: 389,\r\n    Kardus: 480,\r\n    Tembaga: 218,\r\n    Kaleng: 189,\r\n    Besi: 199,\r\n    Kaca: 199,\r\n    Kabel: 200\r\n  },\r\n  {\r\n    name: \"Jun\",\r\n    botolplastik: 239,\r\n    Kardus: 380,\r\n    Tembaga: 250,\r\n    Kaleng: 200,\r\n    Besi: 250,\r\n    Kaca: 260,\r\n    Kabel: 260\r\n  },\r\n  {\r\n    name: \"Jul\",\r\n    botolplastik: 400,\r\n    Kardus: 240,\r\n    Tembaga: 240,\r\n    Kaleng: 430,\r\n    Besi: 430,\r\n    Kaca: 430,\r\n    Kabel: 430\r\n  },\r\n  {\r\n    name: \"Ags\",\r\n    botolplastik: 300,\r\n    Kardus: 139,\r\n    Tembaga: 221,\r\n    Kaleng: 210,\r\n    Besi: 240,\r\n    Kaca: 250,\r\n    Kabel: 260\r\n  },\r\n  {\r\n    name: \"Sep\",\r\n    botolplastik: 500,\r\n    Kardus: 680,\r\n    Tembaga: 229,\r\n    Kaleng: 120,\r\n    Besi: 139,\r\n    Kaca: 149,\r\n    Kabel: 149\r\n  },\r\n  {\r\n    name: \"Okt\",\r\n    botolplastik: 278,\r\n    Kardus: 390,\r\n    Tembaga: 200,\r\n    Kaleng: 139,\r\n    Besi: 139,\r\n    Kaca: 159,\r\n    Kabel: 159\r\n  },\r\n  {\r\n    name: \"Nov\",\r\n    botolplastik: 378,\r\n    Kardus: 390,\r\n    Tembaga: 200,\r\n    Kaleng: 210,\r\n    Besi: 250,\r\n    Kaca: 270,\r\n    Kabel: 260\r\n  },\r\n  {\r\n    name: \"Des\",\r\n    botolplastik: 449,\r\n    Kardus: 430,\r\n    Tembaga: 210,\r\n    Kaleng: 139,\r\n    Besi: 149,\r\n    Kaca: 180,\r\n    Kabel: 160\r\n  }\r\n];\r\n\r\nfunction SimpleLineChart() {\r\n  return (\r\n    <ResponsiveContainer width=\"99%\" height={300}>\r\n      <LineChart\r\n        data={data}\r\n        margin={{ top: 20, right: 120, left: 1, bottom: 5 }}\r\n      >\r\n        <XAxis dataKey=\"name\" fontSize=\"11px\" />\r\n        <YAxis />\r\n        <CartesianGrid strokeDasharray=\"3 3\" />\r\n        <Tooltip />\r\n        <Legend />\r\n        <Line\r\n          type=\"monotone\"\r\n          dataKey=\"botolplastik\" // uv\r\n          stroke=\"#0000ff\"\r\n          activeDot={{ r: 8 }}\r\n        />\r\n        <Line type=\"monotone\" dataKey=\"Kardus\" stroke=\"#82ca9d\" />\r\n        <Line type=\"monotone\" dataKey=\"Tembaga\" stroke=\"#ff0000\" />\r\n        <Line type=\"monotone\" dataKey=\"Kaleng\" stroke=\"#2ca02c\" />\r\n        <Line type=\"monotone\" dataKey=\"Besi\" stroke=\"#9467bd\" />\r\n        <Line type=\"monotone\" dataKey=\"Kaca\" stroke=\"#8c564b\" />\r\n        <Line type=\"monotone\" dataKey=\"Kabel\" stroke=\"#e377c2\" />\r\n      </LineChart>\r\n    </ResponsiveContainer>\r\n  );\r\n}\r\n\r\nexport default SimpleLineChart;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { BarChart, Bar, XAxis, YAxis, CartesianGrid, Cell } from \"recharts\";\r\nimport ResponsiveContainer from \"recharts/lib/component/ResponsiveContainer\";\r\nconst colors = [\r\n  \"#ff0000\",\r\n  \"#82ca9d\",\r\n  \"#2ca02c\",\r\n  \"#9467bd\",\r\n  \"#0000ff\",\r\n  \"#8c564b\",\r\n  \"#e377c2\",\r\n  \"#7f7f7f\",\r\n  \"#bcbd22\",\r\n  \"#17becf\"\r\n];\r\nconst data = [\r\n  { name: \"Tembaga\", uv: 40, female: 24, male: 24 },\r\n  { name: \"Kardus\", uv: 30, female: 89, male: 22 },\r\n  { name: \"Kaleng\", uv: 20, female: 48, male: 22 },\r\n  { name: \"Besi Karat\", uv: 27, female: 39, male: 20 },\r\n  { name: \"Botol Plastik\", uv: 18, female: 69, male: 21 },\r\n  { name: \"Pecahan Kaca\", uv: 23, female: 38, male: 25 },\r\n  { name: \"Kabel Bekas\", uv: 34, female: 43, male: 21 }\r\n];\r\n\r\nconst getPath = (x, y, width, height) => {\r\n  return `M${x},${y + height}\r\n          C${x + width / 3},${y + height} ${x + width / 2},${y +\r\n    height / 3} ${x + width / 2}, ${y}\r\n          C${x + width / 2},${y + height / 3} ${x + (2 * width) / 3},${y +\r\n    height} ${x + width}, ${y + height}\r\n          Z`;\r\n};\r\n\r\nconst TriangleBar = props => {\r\n  const { fill, x, y, width, height } = props;\r\n\r\n  return <path d={getPath(x, y, width, height)} stroke=\"none\" fill={fill} />;\r\n};\r\n\r\nTriangleBar.propTypes = {\r\n  fill: PropTypes.string,\r\n  x: PropTypes.number,\r\n  y: PropTypes.number,\r\n  width: PropTypes.number,\r\n  height: PropTypes.number\r\n};\r\n\r\nfunction CustomShapeBarChart() {\r\n  return (\r\n    <ResponsiveContainer width=\"99%\" height={300}>\r\n      <BarChart\r\n        data={data}\r\n        margin={{ top: 20, right: 0.1, left: 1, bottom: 5 }}\r\n      >\r\n        <XAxis dataKey=\"name\" />\r\n        <YAxis />\r\n        <CartesianGrid strokeDasharray=\"3 3\" />\r\n        <Bar\r\n          dataKey=\"female\"\r\n          fill=\"#8884d8\"\r\n          shape={<TriangleBar />}\r\n          label={{ position: \"top\" }}\r\n        >\r\n          {data.map((entry, index) => (\r\n            <Cell key={`cell-${index}`} fill={colors[index % 20]} />\r\n          ))}\r\n        </Bar>\r\n      </BarChart>\r\n    </ResponsiveContainer>\r\n  );\r\n}\r\n\r\nexport default CustomShapeBarChart;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { BarChart, Bar, XAxis, YAxis, CartesianGrid, Cell } from \"recharts\";\r\nimport ResponsiveContainer from \"recharts/lib/component/ResponsiveContainer\";\r\nconst colors = [\r\n  \"#ff0000\",\r\n  \"#82ca9d\",\r\n  \"#2ca02c\",\r\n  \"#9467bd\",\r\n  \"#0000ff\",\r\n  \"#8c564b\",\r\n  \"#e377c2\",\r\n  \"#7f7f7f\",\r\n  \"#bcbd22\",\r\n  \"#17becf\"\r\n];\r\nconst data = [\r\n  { name: \"Tembaga\", uv: 40, female: 24, male: 24 },\r\n  { name: \"Kardus\", uv: 30, female: 89, male: 22 },\r\n  { name: \"Kaleng\", uv: 20, female: 48, male: 22 },\r\n  { name: \"Besi Karat\", uv: 27, female: 39, male: 20 },\r\n  { name: \"Botol Plastik\", uv: 18, female: 69, male: 21 },\r\n  { name: \"Pecahan Kaca\", uv: 23, female: 38, male: 25 },\r\n  { name: \"Kabel Bekas\", uv: 34, female: 43, male: 21 }\r\n];\r\n\r\nconst getPath = (x, y, width, height) => {\r\n  return `M${x},${y + height}\r\n          C${x + width / 3},${y + height} ${x + width / 2},${y +\r\n    height / 3} ${x + width / 2}, ${y}\r\n          C${x + width / 2},${y + height / 3} ${x + (2 * width) / 3},${y +\r\n    height} ${x + width}, ${y + height}\r\n          Z`;\r\n};\r\n\r\nconst TriangleBar = props => {\r\n  const { fill, x, y, width, height } = props;\r\n\r\n  return <path d={getPath(x, y, width, height)} stroke=\"none\" fill={fill} />;\r\n};\r\n\r\nTriangleBar.propTypes = {\r\n  fill: PropTypes.string,\r\n  x: PropTypes.number,\r\n  y: PropTypes.number,\r\n  width: PropTypes.number,\r\n  height: PropTypes.number\r\n};\r\n\r\nfunction CustomShapeBarChartss() {\r\n  return (\r\n    <ResponsiveContainer width=\"99%\" height={300}>\r\n      <BarChart data={data} margin={{ top: 20, right: 10, left: 1, bottom: 5 }}>\r\n        <XAxis dataKey=\"name\" />\r\n        <YAxis />\r\n        <CartesianGrid strokeDasharray=\"3 3\" />\r\n        <Bar\r\n          dataKey=\"female\"\r\n          fill=\"#8884d8\"\r\n          shape={<TriangleBar />}\r\n          label={{ position: \"top\" }}\r\n        >\r\n          {data.map((entry, index) => (\r\n            <Cell key={`cell-${index}`} fill={colors[index % 20]} />\r\n          ))}\r\n        </Bar>\r\n\r\n        <Bar\r\n          dataKey=\"male\"\r\n          fill=\"#bcbd22\"\r\n          shape={<TriangleBar />}\r\n          label={{ position: \"top\" }}\r\n        >\r\n          {data.map((entry, index) => (\r\n            <Cell key={`cell-${index}`} fill={colors[index % 20]} />\r\n          ))}\r\n        </Bar>\r\n      </BarChart>\r\n    </ResponsiveContainer>\r\n  );\r\n}\r\n\r\nexport default CustomShapeBarChartss;\r\n","import React from \"react\";\r\nimport {\r\n  ComposedChart,\r\n  Area,\r\n  Line,\r\n  Bar,\r\n  XAxis,\r\n  YAxis,\r\n  CartesianGrid,\r\n  Tooltip,\r\n  Legend,\r\n  ResponsiveContainer\r\n} from \"recharts\";\r\n\r\nconst data = [\r\n  { name: \"Januari\", organik: 590, non_organik: 800, kimia: 1400 },\r\n  { name: \"Februari\", organik: 868, non_organik: 967, kimia: 1506 },\r\n  { name: \"Maret\", organik: 1397, non_organik: 1098, kimia: 989 },\r\n  { name: \"April\", organik: 1480, non_organik: 1200, kimia: 1228 },\r\n  { name: \"Mei\", organik: 1520, non_organik: 1108, kimia: 1100 },\r\n  { name: \"Juni\", organik: 1400, non_organik: 680, kimia: 1700 }\r\n];\r\n\r\nfunction randomChart() {\r\n  return (\r\n    <ResponsiveContainer\r\n      width=\"99%\"\r\n      height={250}\r\n      margin={{ top: 20, right: 85, bottom: 20, left: 20 }}\r\n    >\r\n      <ComposedChart data={data}>\r\n        <XAxis dataKey=\"name\" />\r\n        <YAxis />\r\n        <Tooltip />\r\n        <Legend />\r\n        <CartesianGrid stroke=\"#f5f5f5\" />\r\n        <Area\r\n          type=\"monotone\"\r\n          dataKey=\"organik\"\r\n          fill=\"#8884d8\"\r\n          stroke=\"#8884d8\"\r\n        />\r\n        <Bar dataKey=\"non_organik\" barSize={20} fill=\"#413ea0\" />\r\n        <Line type=\"monotone\" dataKey=\"kimia\" stroke=\"#ff7300\" />\r\n      </ComposedChart>\r\n    </ResponsiveContainer>\r\n  );\r\n}\r\n\r\nexport default randomChart;\r\n","import React from \"react\";\r\nimport FusionCharts from \"fusioncharts\";\r\nimport charts from \"fusioncharts/fusioncharts.charts\";\r\nimport ReactFusioncharts from \"react-fusioncharts\";\r\n\r\n// Resolves charts dependancy\r\ncharts(FusionCharts);\r\n\r\nconst dataSource = {\r\n  chart: {\r\n    showlegend: \"1\",\r\n    showpercentvalues: \"1\",\r\n    legendposition: \"right\",\r\n    usedataplotcolorforlabels: \"1\",\r\n    theme: \"fusion\"\r\n  },\r\n  data: [\r\n    {\r\n      label: \"Botol Plastik\",\r\n      value: \"32647479\"\r\n    },\r\n    {\r\n      label: \"Kadrus\",\r\n      value: \"22100932\"\r\n    },\r\n    {\r\n      label: \"Tembaga\",\r\n      value: \"14376\"\r\n    },\r\n    {\r\n      label: \"Kaleng\",\r\n      value: \"18674221\"\r\n    }\r\n  ]\r\n};\r\n\r\nclass PieChart extends React.Component {\r\n  render() {\r\n    return (\r\n      <ReactFusioncharts\r\n        type=\"pie2d\"\r\n        width={500}\r\n        height={250}\r\n        dataFormat=\"JSON\"\r\n        dataSource={dataSource}\r\n      />\r\n    );\r\n  }\r\n}\r\nexport default PieChart;\r\n","import React from \"react\";\r\nimport FusionCharts from \"fusioncharts\";\r\nimport charts from \"fusioncharts/fusioncharts.charts\";\r\nimport ReactFusioncharts from \"react-fusioncharts\";\r\n\r\n// Resolves charts dependancy\r\ncharts(FusionCharts);\r\n\r\nconst dataSource = {\r\n  chart: {\r\n    // caption: \"Android Distribution for our app\",\r\n    // subcaption: \"For all users in 2017\",\r\n    showpercentvalues: \"1\",\r\n    defaultcenterlabel: \"Android Distribution\",\r\n    aligncaptionwithcanvas: \"0\",\r\n    captionpadding: \"0\",\r\n    decimals: \"1\",\r\n    plottooltext:\r\n      \"<b>$percentValue</b> of our Android users are on <b>$label</b>\",\r\n    centerlabel: \"# Users: $value\",\r\n    theme: \"fusion\"\r\n  },\r\n  data: [\r\n    {\r\n      label: \"Ice Cream Sandwich\",\r\n      value: \"1000\"\r\n    },\r\n    {\r\n      label: \"Jelly Bean\",\r\n      value: \"5300\"\r\n    },\r\n    {\r\n      label: \"Kitkat\",\r\n      value: \"10500\"\r\n    },\r\n    {\r\n      label: \"Lollipop\",\r\n      value: \"18900\"\r\n    },\r\n    {\r\n      label: \"Marshmallow\",\r\n      value: \"17904\"\r\n    }\r\n  ]\r\n};\r\n\r\nclass Donutcharts extends React.Component {\r\n  render() {\r\n    return (\r\n      <ReactFusioncharts\r\n        type=\"doughnut2d\"\r\n        width={500}\r\n        height={250}\r\n        dataFormat=\"JSON\"\r\n        dataSource={dataSource}\r\n      />\r\n    );\r\n  }\r\n}\r\nexport default Donutcharts;\r\n","import React from \"react\";\r\nimport FusionCharts from \"fusioncharts\";\r\nimport charts from \"fusioncharts/fusioncharts.charts\";\r\nimport ReactFusioncharts from \"react-fusioncharts\";\r\n\r\n// Resolves charts dependancy\r\ncharts(FusionCharts);\r\n\r\nconst dataSource = {\r\n  chart: {\r\n    showvalues: \"1\",\r\n    showpercentintooltip: \"0\",\r\n    numberprefix: \"$\",\r\n    enablemultislicing: \"1\",\r\n    theme: \"fusion\"\r\n  },\r\n  data: [\r\n    {\r\n      label: \"Equity\",\r\n      value: \"300000\"\r\n    },\r\n    {\r\n      label: \"Debt\",\r\n      value: \"230000\"\r\n    },\r\n    {\r\n      label: \"Bullion\",\r\n      value: \"180000\"\r\n    },\r\n    {\r\n      label: \"Real-estate\",\r\n      value: \"270000\"\r\n    },\r\n    {\r\n      label: \"Insurance\",\r\n      value: \"20000\"\r\n    }\r\n  ]\r\n};\r\n\r\nclass Pietreecharts extends React.Component {\r\n  render() {\r\n    return (\r\n      <ReactFusioncharts\r\n        type=\"pie3d\"\r\n        width={500}\r\n        height={250}\r\n        dataFormat=\"JSON\"\r\n        dataSource={dataSource}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default Pietreecharts;\r\n","// in src/Dashboard.js\r\nimport React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport SimpleLineChart from \"../components/linecharts\";\r\nimport CustomShapeBarChart from \"../components/barcharts\";\r\nimport CustomShapeBarChartss from \"../components/barchartss\";\r\nimport Randomcharts from \"../components/randomcharts\";\r\nimport PieChart from \"../components/piecharts\";\r\nimport Donutcharts from \"../components/donutcharts\";\r\nimport Pietreecharts from \"../components/pietreecharts\";\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    flexGrow: 1\r\n  },\r\n  paper: {\r\n    padding: theme.spacing.unit * 2,\r\n    textAlign: \"center\",\r\n    fontWeight: \"Bold\",\r\n    color: theme.palette.text.secondary\r\n  },\r\n  pont: {\r\n    fontSize: \"30px\",\r\n    fontWeight: \"Bold\",\r\n    padding: theme.spacing.unit * 2,\r\n    textAlign: \"center\"\r\n  },\r\n  line: {\r\n    position: \"right\"\r\n  }\r\n});\r\n\r\nfunction CenteredGrid(props) {\r\n  const { classes } = props;\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Grid container spacing={24}>\r\n        <Grid item xs={12}>\r\n          <Paper className={classes.pont}>\r\n            Info Grafis Bank Sampah Perjuangan{\" \"}\r\n          </Paper>\r\n        </Grid>\r\n\r\n        <Grid item xs={12}>\r\n          <Paper className={classes.paper}>\r\n            Total Pembelian Berdasarkan Type-Sampah (Perminggu){\" \"}\r\n            <CustomShapeBarChart />{\" \"}\r\n          </Paper>\r\n        </Grid>\r\n\r\n        <Grid item xs={12}>\r\n          <Paper className={classes.paper}>\r\n            Total Pembelian Berdasarkan Jumlah Nasabah (Perminggu){\" \"}\r\n            <CustomShapeBarChartss />{\" \"}\r\n          </Paper>\r\n        </Grid>\r\n\r\n        <Grid item xs={12}>\r\n          <Paper className={classes.paper}>\r\n            Info Grafik Pembelian Berdasarkan Type Sampah (Kg){\" \"}\r\n            <SimpleLineChart />{\" \"}\r\n          </Paper>\r\n        </Grid>\r\n\r\n        <Grid item xs={6}>\r\n          <Paper className={classes.paper}>\r\n            Persentase Pembelian Type Sampah <Randomcharts />{\" \"}\r\n          </Paper>\r\n        </Grid>\r\n\r\n        <Grid item xs={6}>\r\n          <Paper className={classes.paper}>\r\n            Persentase Pembelian Type Sampah <Pietreecharts />{\" \"}\r\n          </Paper>\r\n        </Grid>\r\n\r\n        <Grid item xs={6}>\r\n          <Paper className={classes.paper}>\r\n            Persentase Pembelian Type Sampah <PieChart />{\" \"}\r\n          </Paper>\r\n        </Grid>\r\n\r\n        <Grid item xs={6}>\r\n          <Paper className={classes.paper}>\r\n            Persentase Pembelian Type Sampah <Donutcharts />{\" \"}\r\n          </Paper>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n\r\nCenteredGrid.PropTypes = {\r\n  classes: PropTypes.object.isRequired\r\n};\r\n\r\nexport default withStyles(styles)(CenteredGrid);\r\n","// in src/authProvider.js\r\n//import { AUTH_LOGIN, AUTH_LOGOUT, AUTH_ERROR, AUTH_CHECK } from \"react-admin\";\r\nimport { AUTH_LOGOUT } from \"react-admin\";\r\n\r\nexport default (type, params) => {\r\n  // called when the user attempts to log in\r\n  // if (type === AUTH_LOGIN) {\r\n  //   const { username } = params;\r\n  //   localStorage.setItem(\"username\", username);\r\n  //   // accept all username/password combinations\r\n  //   return Promise.resolve();\r\n  // }\r\n  // called when the user clicks on the logout button\r\n  if (type === AUTH_LOGOUT) {\r\n    localStorage.removeItem(\"username\");\r\n    return Promise.resolve();\r\n  }\r\n  // called when the API returns an error\r\n  // if (type === AUTH_ERROR) {\r\n  //   const { status } = params;\r\n  //   if (status === 401 || status === 403) {\r\n  //     localStorage.removeItem(\"username\");\r\n  //     return Promise.reject();\r\n  //   }\r\n  //   return Promise.resolve();\r\n  // }\r\n  // // called when the user navigates to a new location\r\n  // if (type === AUTH_CHECK) {\r\n  //   return localStorage.getItem(\"username\")\r\n  //     ? Promise.resolve()\r\n  //     : Promise.reject();\r\n  // }\r\n  // return Promise.reject(\"Unknown method\");\r\n};\r\n","// in src/App.js\nimport React from \"react\";\nimport { Admin, Resource } from \"react-admin\";\nimport { ChekTransaksi, TranShow } from \"./Menu/transactions\";\nimport { ScheduleList } from \"./Menu/schedules\";\nimport { MyaccountList } from \"./Menu/MyAccount\";\nimport { UpdateHarga } from \"./Menu/UpdateHarga\";\nimport { trashpurchase } from \"./Menu/TrashPurchase\";\nimport { createMuiTheme } from \"@material-ui/core/styles\";\nimport { Customers } from \"./Menu/customers.js\";\nimport index from \"@material-ui/core/colors/index\";\nimport Dashboard from \"./Menu/Dashboard\";\nimport authProvider from \"./authProvider\";\n//import dataProvider from './dataProvider';\nimport jsonServerProvider from \"ra-data-json-server\";\n//import simpleRestProvider from \"ra-data-json-server\";\nimport UserIcon from \"@material-ui/icons/Group\";\nimport AddShoppingCart from \"@material-ui/icons/AddShoppingCart\";\n//import List from \"@material-ui/icons/List\";\nimport DateRange from \"@material-ui/icons/DateRange\";\nimport AccountBox from \"@material-ui/icons/AccountBox\";\n//import PersonAdd from \"@material-ui/icons/PersonAdd\";\nimport AddCircleOutline from \"@material-ui/icons/AddCircleOutline\";\n//import { formatMs } from \"@material-ui/core/styles/transitions\";\n\nconst dataProvider = jsonServerProvider(\n  \"https://my-json-server.typicode.com/dodinurkasih/jsonserver\"\n);\n// \"https://my-json-server.typicode.com/dodinurkasih/jsonserver\"\n// \"http://localhost:3000\"\nconst theme = createMuiTheme({\n  palette: {\n    primary: index,\n    secondary: {\n      main: \"#00e5ff\"\n    }\n  }\n});\n\nconst App = () => (\n  <Admin\n    title\n    theme={theme}\n    dashboard={Dashboard}\n    authProvider={authProvider}\n    dataProvider={dataProvider}\n  >\n    <Resource\n      name=\"customers\"\n      list={Customers}\n      icon={UserIcon}\n      options={{ label: \"nasabah\" }}\n    />\n\n    <Resource\n      name=\"transactions\"\n      show={TranShow}\n      list={ChekTransaksi}\n      icon={AddShoppingCart}\n      options={{ label: \"Cek Transaksi\" }}\n    />\n    <Resource name=\"stransaksi\" />\n\n    <Resource\n      name=\"schedules\"\n      list={ScheduleList}\n      icon={DateRange}\n      options={{ label: \"Schedule PickUp\" }}\n    />\n    <Resource\n      name=\"myaccounts\"\n      list={MyaccountList}\n      icon={AccountBox}\n      options={{ label: \"Akun Saya\" }}\n    />\n    <Resource\n      name=\"updateharga\"\n      list={UpdateHarga}\n      icon={AddCircleOutline}\n      options={{ label: \"Add/Update Harga\" }}\n    />\n\n    <Resource\n      name=\"Trash Purchase\"\n      list={trashpurchase}\n      icon={AccountBox}\n      options={{ label: \"Pembelian Sampah\" }}\n    />\n  </Admin>\n);\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}