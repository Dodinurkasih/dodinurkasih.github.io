{"version":3,"sources":["Menu/ResetViewsButton.js","Menu/transactions.js","Menu/schedules.js","Menu/MyAccount.js","Menu/UpdateHarga.js","Menu/TrashPurchase.js","components/linecharts.js","components/barcharts.js","components/barchartss.js","components/randomcharts.js","components/piecharts.js","components/donutcharts.js","components/pietreecharts.js","Menu/Dashboard.js","authProvider.js","App.js","serviceWorker.js","index.js"],"names":["ResetViewsButton","handleClick","_this$props","_this","props","basePath","resource","selectedIds","startUndoable","crudUpdateMany","views","react_default","a","createElement","Button","label","onClick","this","Component","connect","undefined","TranFilter","Filter","TextInput","source","alwaysOn","ReferenceInput","reference","allowEmpty","SelectInput","optionText","BulkActionButtons","react","Menu_ResetViewsButton","Object","assign","BulkDeleteButton","ChekTransaksi","List","title","filters","transactions_TranFilter","bulkActionButtons","transactions_BulkActionButtons","Responsive","small","Datagrid","TextField","ShowButton","medium","ReferenceField","TranShow","Show","TabbedShowLayout","Tab","path","ScheduleList","schedules_BulkActionButtons","ScheduleCreate","Create","SimpleForm","LongTextInput","cardStyle","width","minHeight","margin","display","body","items","src","altText","caption","header","Example","reactstrap_es","MyAccount","_ref","ids","data","style","map","id","Card_default","top","alt","record","AccountEdit","Edit","MyaccountList","MyAccount_MyAccount","verticalAlign","MyHarga","accountId","CardActions_default","textAlign","EditButton","UpdateCreate","UpdateEdit","DisabledInput","UpdatehargaList","UpdateHarga_MyHarga","TrashpurchaseList","TrashPurchase_TranFilter","TrashPurchase_BulkActionButtons","TrashShow","SimpleShowLayout","SaveButton","name","botolplastik","Kardus","Tembaga","Kaleng","Besi","Kaca","Kabel","SimpleLineChart","ResponsiveContainer_default","height","LineChart","right","left","bottom","XAxis","dataKey","fontSize","YAxis","CartesianGrid","strokeDasharray","Tooltip","Legend","Line","type","stroke","activeDot","r","colors","uv","female","male","TriangleBar","fill","x","y","d","concat","getPath","CustomShapeBarChart","BarChart","Bar","shape","barcharts_TriangleBar","position","entry","index","Cell","key","CustomShapeBarChartss","barchartss_TriangleBar","organik","non_organik","kimia","randomChart","component_ResponsiveContainer","ComposedChart","Area","barSize","charts","FusionCharts","dataSource","chart","showlegend","showpercentvalues","legendposition","usedataplotcolorforlabels","theme","value","PieChart","ReactFC_default","dataFormat","React","defaultcenterlabel","aligncaptionwithcanvas","captionpadding","decimals","plottooltext","centerlabel","Donutcharts","showvalues","showpercentintooltip","numberprefix","enablemultislicing","Pietreecharts","CenteredGrid","classes","className","root","Grid_default","container","spacing","item","xs","md","Paper_default","pont","paper","barcharts","barchartss","linecharts","randomcharts","pietreecharts","piecharts","donutcharts","PropTypes","object","isRequired","withStyles","flexGrow","padding","unit","fontWeight","color","palette","text","secondary","line","authProvider","params","AUTH_LOGOUT","localStorage","removeItem","Promise","resolve","dataProvider","jsonServerProvider","createMuiTheme","primary","main","App","Admin","dashboard","Dashboard","Resource","show","list","icon","LibraryBooks","options","ShoppingCart","create","DateRange","edit","exa","avatar","AccountBox","card","AddCircleOutline","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.ff5c7160.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Button, crudUpdateMany, startUndoable } from \"react-admin\";\r\n\r\nclass ResetViewsButton extends Component {\r\n  handleClick = () => {\r\n    const { basePath, resource, selectedIds, startUndoable } = this.props;\r\n    startUndoable(\r\n      crudUpdateMany(resource, selectedIds, { views: 0 }, basePath)\r\n    );\r\n  };\r\n\r\n  render() {\r\n    return <Button label=\"Reset Views\" onClick={this.handleClick} />;\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  undefined,\r\n  { startUndoable }\r\n)(ResetViewsButton);\r\n","// in src/users.js\r\nimport React, { Fragment } from \"react\";\r\nimport ResetViewsButton from \"./ResetViewsButton\";\r\nimport {\r\n  List,\r\n  Datagrid,\r\n  TextField,\r\n  Filter,\r\n  TextInput,\r\n  ReferenceInput,\r\n  SelectInput,\r\n  // SimpleList,\r\n  Responsive,\r\n  ReferenceField,\r\n  Show,\r\n  // SimpleShowLayout,\r\n  // DateField,\r\n  ShowButton,\r\n  TabbedShowLayout,\r\n  BulkDeleteButton,\r\n  // DeleteButton,\r\n  Tab\r\n  // RichTextField,\r\n  // NumberField,\r\n  // BooleanField,\r\n  // ReferenceManyField,\r\n  // EditButton\r\n} from \"react-admin\";\r\n\r\nconst TranFilter = props => (\r\n  <Filter {...props}>\r\n    <TextInput label=\"Search\" source=\"q\" alwaysOn />\r\n    <ReferenceInput\r\n      label=\"Status\"\r\n      source=\"statusId\"\r\n      reference=\"stransaksi\"\r\n      allowEmpty\r\n    >\r\n      <SelectInput optionText=\"status\" />\r\n    </ReferenceInput>\r\n  </Filter>\r\n);\r\n\r\nconst BulkActionButtons = props => (\r\n  <Fragment>\r\n    <ResetViewsButton label=\"Reset Views\" {...props} />\r\n    {/* Add the default bulk delete action */}\r\n    <BulkDeleteButton {...props} />\r\n  </Fragment>\r\n);\r\n\r\nexport const ChekTransaksi = props => (\r\n  <List\r\n    title=\"Cek Transaksi\"\r\n    {...props}\r\n    filters={<TranFilter />}\r\n    bulkActionButtons={<BulkActionButtons />}\r\n  >\r\n    <Responsive\r\n      small={\r\n        <Datagrid>\r\n          <TextField label=\"Nama Penjaul\" source=\"nama\" />\r\n          <TextField label=\"Alamat\" source=\"alamat\" />\r\n          <TextField label=\"Tanggal Pembelian\" source=\"tanggal\" />\r\n          <ShowButton />\r\n        </Datagrid>\r\n      }\r\n      medium={\r\n        <Datagrid>\r\n          <TextField label=\"Nama Penjaul\" source=\"nama\" />\r\n          <TextField label=\"Alamat\" source=\"alamat\" />\r\n          <TextField label=\"Tanggal Pembelian\" source=\"tanggal\" />\r\n          <TextField label=\"Jenis Sampah\" source=\"jenissampah\" />\r\n          <TextField label=\"Jumlah Sampah\" source=\"jumlahsampah\" />\r\n\r\n          <ReferenceField\r\n            label=\"Status Transaksi\"\r\n            source=\"statusId\"\r\n            reference=\"stransaksi\"\r\n          >\r\n            <TextField source=\"status\" />\r\n          </ReferenceField>\r\n          <ShowButton />\r\n        </Datagrid>\r\n      }\r\n    />\r\n  </List>\r\n);\r\n\r\nexport const TranShow = props => (\r\n  <Show {...props}>\r\n    {/* <SimpleShowLayout>\r\n      <TextField label=\"Nama Penjaul\" source=\"nama\" />\r\n      <TextField label=\"Alamat\" source=\"alamat\" />\r\n      <TextField label=\"Tanggal Pembelian\" source=\"tanggal\" />\r\n      <TextField label=\"Kontak\" source=\"hp\" />\r\n      <TextField label=\"Tanggal\" source=\"tanggal\" />\r\n      <TextField label=\"Jenis Sampah\" source=\"jenissampah\" />\r\n      <TextField label=\"Harga Sampah\" source=\"hargasampah\" />\r\n      <TextField label=\"Jumlah Sampah\" source=\"jumlahsampah\" />\r\n      <TextField label=\"Jenis Pembayaran\" source=\"metodepembayaran\" />\r\n      <TextField label=\"Total Pembayaran\" source=\"totalpembayaran\" />\r\n\r\n      <ReferenceField label=\"Status\" source=\"statusId\" reference=\"stransaksi\">\r\n        <TextField source=\"status\" />\r\n      </ReferenceField> */}\r\n\r\n    <TabbedShowLayout>\r\n      <Tab label=\"Detai Penjual\">\r\n        <TextField label=\"Penjaul\" source=\"nama\" />\r\n        <TextField label=\"Alamat\" source=\"alamat\" />\r\n        <TextField label=\"Tanggal Pembelian\" source=\"tanggal\" />\r\n        <TextField label=\"Kontak\" source=\"hp\" />\r\n        <TextField label=\"Email\" source=\"email\" />\r\n      </Tab>\r\n      <Tab label=\"Detail Barang\">\r\n        <TextField label=\"Tanggal Pembelian\" source=\"tanggal\" />\r\n        <TextField label=\"Jenis Sampah\" source=\"jenissampah\" />\r\n        <TextField label=\"Jumlah Sampah\" source=\"jumlahsampah\" />\r\n      </Tab>\r\n      <Tab label=\"Status Transaksi\" path=\"miscellaneous\">\r\n        <ReferenceField\r\n          label=\"Status Transaksi\"\r\n          source=\"statusId\"\r\n          reference=\"stransaksi\"\r\n        >\r\n          <TextField source=\"status\" />\r\n        </ReferenceField>\r\n      </Tab>\r\n      <Tab label=\"Metode Pembayaran\">\r\n        <TextField label=\"Total Pembayaran\" source=\"totalpembayaran\" />\r\n        <TextField source=\"metodepembayaran\" />\r\n      </Tab>\r\n    </TabbedShowLayout>\r\n    {/* </SimpleShowLayout> */}\r\n  </Show>\r\n);\r\n","import React, { Fragment } from \"react\";\r\nimport ResetViewsButton from \"./ResetViewsButton\";\r\nimport {\r\n  List,\r\n  Datagrid,\r\n  TextField,\r\n  TextInput,\r\n  Responsive,\r\n  SimpleForm,\r\n  LongTextInput,\r\n  BulkDeleteButton,\r\n  Create\r\n} from \"react-admin\";\r\n\r\nconst BulkActionButtons = props => (\r\n  <Fragment>\r\n    <ResetViewsButton label=\"Reset Views\" {...props} />\r\n    {/* Add the default bulk delete action */}\r\n    <BulkDeleteButton {...props} />\r\n  </Fragment>\r\n);\r\n\r\nexport const ScheduleList = props => (\r\n  <List\r\n    title=\"Schedule Pickup\"\r\n    {...props}\r\n    bulkActionButtons={<BulkActionButtons />}\r\n  >\r\n    <Responsive\r\n      small={\r\n        <Datagrid>\r\n          <TextField label=\"Judul\" source=\"judul\" />\r\n          <TextField label=\"Tanggal\" source=\"tanggal\" />\r\n          <TextField label=\"Hari\" source=\"hari\" />\r\n          <TextField label=\"Lokasi Awal\" source=\"lokawal\" />\r\n          <TextField label=\"Lokasi Akhir\" source=\"lokakhir\" />\r\n        </Datagrid>\r\n      }\r\n      medium={\r\n        <Datagrid>\r\n          <TextField label=\"Judul\" source=\"judul\" />\r\n          <TextField label=\"Tanggal\" source=\"tanggal\" />\r\n          <TextField label=\"Hari\" source=\"hari\" />\r\n          <TextField label=\"Lokasi Awal\" source=\"lokawal\" />\r\n          <TextField label=\"Lokasi Akhir\" source=\"lokakhir\" />\r\n        </Datagrid>\r\n      }\r\n    />\r\n  </List>\r\n);\r\n\r\nexport const ScheduleCreate = props => (\r\n  <Create title=\"Buat Schedule Pickup\" {...props}>\r\n    <SimpleForm>\r\n      <TextInput source=\"judul\" />\r\n      <TextInput source=\"tanggal\" />\r\n      <TextInput source=\"hari\" />\r\n      <LongTextInput source=\"lokawal\" />\r\n      <LongTextInput source=\"lokakhir\" />\r\n    </SimpleForm>\r\n  </Create>\r\n);\r\n","// in src/comments.js\r\nimport React from \"react\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport { UncontrolledCarousel } from \"reactstrap\";\r\n// import CardActions from \"@material-ui/core/CardActions\";\r\n// import CardContent from \"@material-ui/core/CardContent\";\r\n// import CardHeader from \"@material-ui/core/CardHeader\";\r\n// import Avatar from \"@material-ui/core/Avatar\";\r\n// import Person from \"@material-ui/icons/Person\";\r\nimport {\r\n  CardImg,\r\n  //CardText,\r\n  CardBody\r\n  //CardTitle,\r\n  //CardSubtitle,\r\n  // Button\r\n} from \"reactstrap\";\r\nimport {\r\n  TextField,\r\n  // EditButton,\r\n  List,\r\n  SimpleForm,\r\n  TextInput,\r\n  Edit\r\n} from \"react-admin\";\r\n\r\nconst cardStyle = {\r\n  width: \"100%\",\r\n  minHeight: 300,\r\n  margin: \"0.5em\",\r\n  display: \"inline-block\"\r\n  // verticalAlign: \"top\"\r\n};\r\n\r\nconst body = {\r\n  margin: \"2em\"\r\n};\r\n\r\n// export const Grid = ({ ids, data, basePath }) => (\r\n//   <div style={{ margin: \"1em\" }}>\r\n//     {ids.map(id => (\r\n//       <Card key={id} style={cardStyle}>\r\n//         <CardHeader title=\"My Account\" avatar={<Avatar icon={<Person />} />} />\r\n//         <CardContent>\r\n//           <h5>\r\n//             Nama :\r\n//             <TextField title=\"Nama Pemilik\" record={data[id]} source=\"nama\" />\r\n//           </h5>\r\n//           <h5>\r\n//             Nama Bank:\r\n//             <TextField record={data[id]} source=\"namabank\" />\r\n//           </h5>\r\n//           <h5>\r\n//             Alamat:\r\n//             <TextField record={data[id]} source=\"alamat\" />\r\n//           </h5>\r\n//           <h5>\r\n//             No.HandPhone:\r\n//             <TextField record={data[id]} source=\"hp\" />\r\n//           </h5>\r\n//           <h5>\r\n//             Total Pembelian:\r\n//             <TextField record={data[id]} source=\"totalpembelian\" />\r\n//           </h5>\r\n//         </CardContent>\r\n//         <CardActions style={{ textAlign: \"right\" }}>\r\n//           <EditButton basePath={basePath} record={data[id]} />\r\n//         </CardActions>\r\n//       </Card>\r\n//     ))}\r\n//   </div>\r\n// );\r\n\r\nconst items = [\r\n  {\r\n    src:\r\n      \"data:image/svg+xml;charset=UTF-8,%3Csvg%20width%3D%22800%22%20height%3D%22400%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20viewBox%3D%220%200%20800%20400%22%20preserveAspectRatio%3D%22none%22%3E%3Cdefs%3E%3Cstyle%20type%3D%22text%2Fcss%22%3E%23holder_15ba800aa1d%20text%20%7B%20fill%3A%23555%3Bfont-weight%3Anormal%3Bfont-family%3AHelvetica%2C%20monospace%3Bfont-size%3A40pt%20%7D%20%3C%2Fstyle%3E%3C%2Fdefs%3E%3Cg%20id%3D%22holder_15ba800aa1d%22%3E%3Crect%20width%3D%22800%22%20height%3D%22400%22%20fill%3D%22%23777%22%3E%3C%2Frect%3E%3Cg%3E%3Ctext%20x%3D%22285.921875%22%20y%3D%22218.3%22%3EFirst%20slide%3C%2Ftext%3E%3C%2Fg%3E%3C%2Fg%3E%3C%2Fsvg%3E\",\r\n    altText: \"Slide 1\",\r\n    caption: \"Slide 1\",\r\n    header: \"Slide 1 Header\"\r\n  },\r\n  {\r\n    src:\r\n      \"data:image/svg+xml;charset=UTF-8,%3Csvg%20width%3D%22800%22%20height%3D%22400%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20viewBox%3D%220%200%20800%20400%22%20preserveAspectRatio%3D%22none%22%3E%3Cdefs%3E%3Cstyle%20type%3D%22text%2Fcss%22%3E%23holder_15ba800aa20%20text%20%7B%20fill%3A%23444%3Bfont-weight%3Anormal%3Bfont-family%3AHelvetica%2C%20monospace%3Bfont-size%3A40pt%20%7D%20%3C%2Fstyle%3E%3C%2Fdefs%3E%3Cg%20id%3D%22holder_15ba800aa20%22%3E%3Crect%20width%3D%22800%22%20height%3D%22400%22%20fill%3D%22%23666%22%3E%3C%2Frect%3E%3Cg%3E%3Ctext%20x%3D%22247.3203125%22%20y%3D%22218.3%22%3ESecond%20slide%3C%2Ftext%3E%3C%2Fg%3E%3C%2Fg%3E%3C%2Fsvg%3E\",\r\n    altText: \"Slide 2\",\r\n    caption: \"Slide 2\",\r\n    header: \"Slide 2 Header\"\r\n  },\r\n  {\r\n    src:\r\n      \"data:image/svg+xml;charset=UTF-8,%3Csvg%20width%3D%22800%22%20height%3D%22400%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20viewBox%3D%220%200%20800%20400%22%20preserveAspectRatio%3D%22none%22%3E%3Cdefs%3E%3Cstyle%20type%3D%22text%2Fcss%22%3E%23holder_15ba800aa21%20text%20%7B%20fill%3A%23333%3Bfont-weight%3Anormal%3Bfont-family%3AHelvetica%2C%20monospace%3Bfont-size%3A40pt%20%7D%20%3C%2Fstyle%3E%3C%2Fdefs%3E%3Cg%20id%3D%22holder_15ba800aa21%22%3E%3Crect%20width%3D%22800%22%20height%3D%22400%22%20fill%3D%22%23555%22%3E%3C%2Frect%3E%3Cg%3E%3Ctext%20x%3D%22277%22%20y%3D%22218.3%22%3EThird%20slide%3C%2Ftext%3E%3C%2Fg%3E%3C%2Fg%3E%3C%2Fsvg%3E\",\r\n    altText: \"Slide 3\",\r\n    caption: \"Slide 3\",\r\n    header: \"Slide 3 Header\"\r\n  }\r\n];\r\n\r\nexport const Example = () => <UncontrolledCarousel items={items} />;\r\n\r\nexport const MyAccount = ({ ids, data, basePath }) => (\r\n  <div style={{ margin: \"1em\" }}>\r\n    {ids.map(id => (\r\n      <Card style={cardStyle}>\r\n        <CardImg\r\n          top\r\n          width=\"100%\"\r\n          src=\"https://placeholdit.imgix.net/~text?txtsize=33&txt=318%C3%97180&w=318&h=180\"\r\n          alt=\"Card image cap\"\r\n        />\r\n        <CardBody style={body}>\r\n          <h5>\r\n            Nama :\r\n            <TextField record={data[id]} source=\"nama\" />\r\n          </h5>\r\n          <h5>\r\n            Nama Bank:\r\n            <TextField record={data[id]} source=\"namabank\" />\r\n          </h5>\r\n          <h5>\r\n            Alamat:\r\n            <TextField record={data[id]} source=\"alamat\" />\r\n          </h5>\r\n          <h5>\r\n            No.HandPhone:\r\n            <TextField record={data[id]} source=\"hp\" />\r\n          </h5>\r\n          <h5>\r\n            Total Pembelian:\r\n            <TextField record={data[id]} source=\"totalpembelian\" />\r\n          </h5>\r\n        </CardBody>\r\n      </Card>\r\n    ))}\r\n  </div>\r\n);\r\n\r\nexport const AccountEdit = props => (\r\n  <Edit {...props}>\r\n    <SimpleForm>\r\n      <TextInput source=\"nama\" />\r\n      <TextInput source=\"namabank\" />\r\n      <TextInput source=\"alamat\" />\r\n      <TextInput source=\"hp\" />\r\n      <TextInput source=\"totalpembelian\" />\r\n    </SimpleForm>\r\n  </Edit>\r\n);\r\n\r\nexport const MyaccountList = props => (\r\n  <List title=\"My Account\" {...props}>\r\n    <MyAccount />\r\n  </List>\r\n);\r\n","// in src/comments.js\r\nimport React from \"react\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\n// import CardContent from \"@material-ui/core/CardContent\";\r\n// import CardHeader from \"@material-ui/core/CardHeader\";\r\n// import AccountBox from \"@material-ui/icons/AccountBox\";\r\n// import Avatar from \"@material-ui/core/Avatar\";\r\nimport {\r\n  CardImg,\r\n  //CardText,\r\n  CardBody\r\n  //CardTitle,\r\n  //CardSubtitle,\r\n  // Button\r\n} from \"reactstrap\";\r\nimport {\r\n  TextField,\r\n  EditButton,\r\n  List,\r\n  // ImageField,\r\n  Create,\r\n  SimpleForm,\r\n  Edit,\r\n  DisabledInput,\r\n  TextInput,\r\n  LongTextInput\r\n} from \"react-admin\";\r\n\r\nconst cardStyle = {\r\n  width: 300,\r\n  minHeight: 300,\r\n  margin: \"0.5em\",\r\n  display: \"inline-block\",\r\n  verticalAlign: \"center\"\r\n};\r\n\r\nconst body = {\r\n  margin: \"2em\"\r\n};\r\n\r\n// const CommentGrid = ({ ids, data, basePath }) => (\r\n//   <div style={{ margin: \"0.5em\" }}>\r\n//     {ids.map(accountId => (\r\n//       <Card key={accountId} style={cardStyle} title={\"\"}>\r\n//         <CardHeader\r\n//           title=\"Update Harga\"\r\n//           avatar={<Avatar icon={<AccountBox />} />}\r\n//         />\r\n//         <CardContent>\r\n//           <ImageField src=\"tampah-bank/tampah.png\" />\r\n//           <h5>\r\n//             Nama Sampah :\r\n//             <TextField record={data[accountId]} source=\"namabarang\" />\r\n//           </h5>\r\n//           <h5>\r\n//             {\" \"}\r\n//             Perkilo :<TextField record={data[accountId]} source=\"perkilo\" />\r\n//           </h5>\r\n//           <h5>\r\n//             {\" \"}\r\n//             Harga :<TextField record={data[accountId]} source=\"harga\" />\r\n//           </h5>\r\n//           <h5>\r\n//             {\" \"}\r\n//             Tanggal Update:\r\n//             <TextField record={data[accountId]} source=\"lastupdate\" />\r\n//           </h5>\r\n//           {/* <ReferenceField\r\n//             label=\"AAAA\"\r\n//             resource=\"comments\"\r\n//             record={data[id]}\r\n//             source=\"post_id\"\r\n//             reference=\"posts\"\r\n//             basePath={basePath}\r\n//           >\r\n//             <TextField source=\"title\" />\r\n//           </ReferenceField> */}\r\n//         </CardContent>\r\n//         <CardActions style={{ textAlign: \"right\" }}>\r\n//           <EditButton\r\n//             resource=\"myaccounts\"\r\n//             basePath={basePath}\r\n//             record={data[accountId]}\r\n//           />\r\n//         </CardActions>\r\n//       </Card>\r\n//     ))}\r\n//   </div>\r\n// );\r\n\r\nexport const MyHarga = ({ ids, data, basePath }) => (\r\n  <div style={{ margin: \"4em\" }}>\r\n    {ids.map(accountId => (\r\n      <Card style={cardStyle}>\r\n        <CardImg\r\n          top\r\n          width=\"100%\"\r\n          src=\"https://placeholdit.imgix.net/~text?txtsize=33&txt=318%C3%97180&w=318&h=180\"\r\n          alt=\"Card image cap\"\r\n        />\r\n        <CardBody style={body}>\r\n          <h5>\r\n            Nama Sampah :\r\n            <TextField record={data[accountId]} source=\"namabarang\" />\r\n          </h5>\r\n          <h5>\r\n            Perkilo :<TextField record={data[accountId]} source=\"perkilo\" />\r\n          </h5>\r\n          <h5>\r\n            Harga :<TextField record={data[accountId]} source=\"harga\" />\r\n          </h5>\r\n          <h5>\r\n            Tanggal Update:\r\n            <TextField record={data[accountId]} source=\"lastupdate\" />\r\n          </h5>\r\n        </CardBody>\r\n        <CardActions style={{ textAlign: \"right\" }}>\r\n          <EditButton\r\n            resource=\"myaccounts\"\r\n            basePath={basePath}\r\n            record={data[accountId]}\r\n          />\r\n        </CardActions>\r\n      </Card>\r\n    ))}\r\n  </div>\r\n);\r\n\r\nexport const UpdateCreate = props => (\r\n  <Create title=\"Tambah Penjualan Sampah\" {...props}>\r\n    <SimpleForm>\r\n      {/* <ReferenceInput\r\n        label=\"Jenis Barang\"\r\n        source=\"transactionId\"\r\n        reference=\"transactions\"\r\n      >\r\n        <TextInput optionText=\"jenissampah\" />\r\n      </ReferenceInput>\r\n      <TextInput source=\"title\" />\r\n      <LongTextInput source=\"body\" /> */}\r\n      <TextInput source=\"namabarang\" />\r\n      <TextInput source=\"perkilo\" />\r\n      <LongTextInput source=\"harga\" />\r\n\r\n      <LongTextInput source=\"lastupdate\" />\r\n    </SimpleForm>\r\n  </Create>\r\n);\r\n\r\nexport const UpdateEdit = props => (\r\n  <Edit {...props}>\r\n    <SimpleForm>\r\n      <DisabledInput label=\"Id\" source=\"updateId\" />\r\n      <TextInput source=\"namabarang\" />\r\n      <TextInput source=\"perkilo\" />\r\n      <TextInput source=\"harga\" />\r\n      <TextInput source=\"lastupdate\" />\r\n    </SimpleForm>\r\n  </Edit>\r\n);\r\n\r\nexport const UpdatehargaList = props => (\r\n  <List title=\"Update Harga Barang\" {...props}>\r\n    <MyHarga />\r\n  </List>\r\n);\r\n","// in src/users.js\r\nimport React, { Fragment } from \"react\";\r\nimport ResetViewsButton from \"./ResetViewsButton\";\r\nimport {\r\n  List,\r\n  Datagrid,\r\n  TextField,\r\n  Filter,\r\n  TextInput,\r\n  ReferenceInput,\r\n  SelectInput,\r\n  // SimpleList,\r\n  Responsive,\r\n  ReferenceField,\r\n  Show,\r\n  SimpleShowLayout,\r\n  SaveButton,\r\n  BulkDeleteButton,\r\n  // DateField,\r\n  ShowButton\r\n  // SimpleForm,\r\n  // Create\r\n  // TabbedShowLayout,\r\n  // DeleteButton,\r\n  // Tab\r\n  // RichTextField,\r\n  // NumberField,\r\n  // BooleanField,\r\n  // ReferenceManyField,\r\n  // EditButton\r\n} from \"react-admin\";\r\n\r\nconst TranFilter = props => (\r\n  <Filter {...props}>\r\n    <TextInput label=\"Search\" source=\"q\" alwaysOn />\r\n    <ReferenceInput\r\n      label=\"Status\"\r\n      source=\"statusId\"\r\n      reference=\"stransaksi\"\r\n      allowEmpty\r\n    >\r\n      <SelectInput optionText=\"status\" />\r\n    </ReferenceInput>\r\n  </Filter>\r\n);\r\nconst BulkActionButtons = props => (\r\n  <Fragment>\r\n    <ResetViewsButton label=\"Reset Views\" {...props} />\r\n    {/* Add the default bulk delete action */}\r\n    <BulkDeleteButton {...props} />\r\n  </Fragment>\r\n);\r\n\r\nexport const TrashpurchaseList = props => (\r\n  <List\r\n    title=\"Pembelian Sampah\"\r\n    {...props}\r\n    filters={<TranFilter />}\r\n    bulkActionButtons={<BulkActionButtons />}\r\n  >\r\n    <Responsive\r\n      small={\r\n        <Datagrid>\r\n          <ReferenceField\r\n            label=\"Nama Penjual\"\r\n            source=\"transactionId\"\r\n            reference=\"transactions\"\r\n          >\r\n            <TextField source=\"nama\" />\r\n          </ReferenceField>\r\n          <ReferenceField\r\n            label=\"Jenis Sampah\"\r\n            source=\"transactionId\"\r\n            reference=\"transactions\"\r\n          >\r\n            <TextField source=\"jenissampah\" />\r\n          </ReferenceField>\r\n\r\n          <ReferenceField\r\n            label=\"Jumlah Sampah\"\r\n            source=\"transactionId\"\r\n            reference=\"transactions\"\r\n          >\r\n            <TextField source=\"jumlahsampah\" />\r\n          </ReferenceField>\r\n          <ShowButton />\r\n        </Datagrid>\r\n      }\r\n      medium={\r\n        <Datagrid>\r\n          <ReferenceField\r\n            label=\"Nama Penjual\"\r\n            source=\"transactionId\"\r\n            reference=\"transactions\"\r\n          >\r\n            <TextField source=\"nama\" />\r\n          </ReferenceField>\r\n          <ReferenceField\r\n            label=\"Jenis Sampah\"\r\n            source=\"transactionId\"\r\n            reference=\"transactions\"\r\n          >\r\n            <TextField source=\"jenissampah\" />\r\n          </ReferenceField>\r\n\r\n          <ReferenceField\r\n            label=\"Jumlah Sampah\"\r\n            source=\"transactionId\"\r\n            reference=\"transactions\"\r\n          >\r\n            <TextField source=\"jumlahsampah\" />\r\n          </ReferenceField>\r\n\r\n          <ReferenceField\r\n            label=\"Tanggal\"\r\n            source=\"transactionId\"\r\n            reference=\"transactions\"\r\n          >\r\n            <TextField source=\"tanggal\" />\r\n          </ReferenceField>\r\n          {/* <ReferenceField\r\n            label=\"Status Transaksi\"\r\n            source=\"statusId\"\r\n            reference=\"stransaksi\"\r\n          >\r\n            <TextField source=\"status\" />\r\n          </ReferenceField> */}\r\n          <ShowButton />\r\n        </Datagrid>\r\n      }\r\n    />\r\n  </List>\r\n);\r\n\r\nexport const TrashShow = props => (\r\n  <Show title=\"Detail Penjualan\" {...props}>\r\n    <SimpleShowLayout>\r\n      <ReferenceField\r\n        label=\"Penjual\"\r\n        source=\"transactionId\"\r\n        reference=\"transactions\"\r\n      >\r\n        <TextField source=\"nama\" />\r\n      </ReferenceField>\r\n      <ReferenceField\r\n        label=\"No.HP\"\r\n        source=\"transactionId\"\r\n        reference=\"transactions\"\r\n      >\r\n        <TextField source=\"hp\" />\r\n      </ReferenceField>\r\n      <ReferenceField\r\n        label=\"Alamat\"\r\n        source=\"transactionId\"\r\n        reference=\"transactions\"\r\n      >\r\n        <TextField source=\"alamat\" />\r\n      </ReferenceField>\r\n      <ReferenceField\r\n        label=\"Type Sampah\"\r\n        source=\"transactionId\"\r\n        reference=\"transactions\"\r\n      >\r\n        <TextField source=\"jenissampah\" />\r\n      </ReferenceField>\r\n      <ReferenceField\r\n        label=\"Jumlah Sampah\"\r\n        source=\"transactionId\"\r\n        reference=\"transactions\"\r\n      >\r\n        <TextField source=\"jumlahsampah\" />\r\n      </ReferenceField>\r\n      <ReferenceField\r\n        label=\"Metode Pembayaran\"\r\n        source=\"transactionId\"\r\n        reference=\"transactions\"\r\n      >\r\n        <TextField source=\"metodepembayaran\" />\r\n      </ReferenceField>\r\n      <ReferenceField\r\n        label=\"Tanggal\"\r\n        source=\"transactionId\"\r\n        reference=\"transactions\"\r\n      >\r\n        <TextField source=\"tanggal\" />\r\n      </ReferenceField>\r\n      {/* <ReferenceField label=\"Status\" source=\"statusId\" reference=\"stransaksi\">\r\n        <TextField source=\"status\" />\r\n      </ReferenceField> */}\r\n      {/* <TabbedShowLayout>\r\n        <Tab label=\"Detai Penjual\">\r\n          <ReferenceField\r\n            label=\"Penjual\"\r\n            source=\"customerId\"\r\n            reference=\"customers\"\r\n          >\r\n            <TextField source=\"nama\" />\r\n          </ReferenceField>\r\n          <ReferenceField\r\n            label=\"Alamat\"\r\n            source=\"customerId\"\r\n            reference=\"customers\"\r\n          >\r\n            <TextField source=\"alamat\" />\r\n          </ReferenceField>\r\n\r\n          <ReferenceField\r\n            label=\"No.HandPhone\"\r\n            source=\"customerId\"\r\n            reference=\"customers\"\r\n          >\r\n            <TextField source=\"hp\" />\r\n          </ReferenceField>\r\n\r\n          <ReferenceField\r\n            label=\"Email\"\r\n            source=\"customerId\"\r\n            reference=\"customers\"\r\n          >\r\n            <TextField source=\"email\" />\r\n          </ReferenceField>\r\n        </Tab>\r\n        <Tab label=\"Detail Barang\">\r\n          <TextField label=\"Jenis Sampah\" source=\"jenissampah\" />\r\n          <TextField label=\"Jumlah Sampah\" source=\"jumlahsampah\" />\r\n          <TextField label=\"Tanggal\" source=\"tanggal\" />\r\n        </Tab>\r\n        <Tab label=\"Status Transaksi\" path=\"miscellaneous\">\r\n          <ReferenceField\r\n            label=\"Status Transaksi\"\r\n            source=\"statusId\"\r\n            reference=\"stransaksi\"\r\n          >\r\n            <TextField source=\"status\" />\r\n          </ReferenceField>\r\n        </Tab>\r\n        <Tab label=\"Metode Pembayaran\">\r\n          <TextField source=\"metodepembayaran\" />\r\n        </Tab>\r\n      </TabbedShowLayout> */}\r\n      <SaveButton label=\" Konfitmasi Beli\" />\r\n      <SaveButton label=\" Batal Beli\" />\r\n    </SimpleShowLayout>\r\n  </Show>\r\n);\r\n","import React from \"react\";\r\nimport {\r\n  LineChart,\r\n  Line,\r\n  CartesianGrid,\r\n  XAxis,\r\n  YAxis,\r\n  Tooltip,\r\n  Legend\r\n} from \"recharts\";\r\nimport ResponsiveContainer from \"recharts/lib/component/ResponsiveContainer\";\r\n\r\nconst data = [\r\n  {\r\n    name: \"Jan\",\r\n    botolplastik: 400,\r\n    Kardus: 240,\r\n    Tembaga: 240,\r\n    Kaleng: 139,\r\n    Besi: 159,\r\n    Kaca: 159,\r\n    Kabel: 159\r\n  },\r\n  {\r\n    name: \"Feb\",\r\n    botolplastik: 300,\r\n    Kardus: 139,\r\n    Tembaga: 221,\r\n    Kaleng: 240,\r\n    Besi: 250,\r\n    Kaca: 250,\r\n    Kabel: 260\r\n  },\r\n  {\r\n    name: \"Mart\",\r\n    botolplastik: 200,\r\n    Kardus: 980,\r\n    Tembaga: 229,\r\n    Kaleng: 139,\r\n    Besi: 159,\r\n    Kaca: 159,\r\n    Kabel: 169\r\n  },\r\n  {\r\n    name: \"Apr\",\r\n    botolplastik: 298,\r\n    Kardus: 390,\r\n    Tembaga: 200,\r\n    Kaleng: 390,\r\n    Besi: 400,\r\n    Kaca: 500,\r\n    Kabel: 500\r\n  },\r\n  {\r\n    name: \"Mei\",\r\n    botolplastik: 389,\r\n    Kardus: 480,\r\n    Tembaga: 218,\r\n    Kaleng: 189,\r\n    Besi: 199,\r\n    Kaca: 199,\r\n    Kabel: 200\r\n  },\r\n  {\r\n    name: \"Jun\",\r\n    botolplastik: 239,\r\n    Kardus: 380,\r\n    Tembaga: 250,\r\n    Kaleng: 200,\r\n    Besi: 250,\r\n    Kaca: 260,\r\n    Kabel: 260\r\n  },\r\n  {\r\n    name: \"Jul\",\r\n    botolplastik: 400,\r\n    Kardus: 240,\r\n    Tembaga: 240,\r\n    Kaleng: 430,\r\n    Besi: 430,\r\n    Kaca: 430,\r\n    Kabel: 430\r\n  },\r\n  {\r\n    name: \"Ags\",\r\n    botolplastik: 300,\r\n    Kardus: 139,\r\n    Tembaga: 221,\r\n    Kaleng: 210,\r\n    Besi: 240,\r\n    Kaca: 250,\r\n    Kabel: 260\r\n  },\r\n  {\r\n    name: \"Sep\",\r\n    botolplastik: 500,\r\n    Kardus: 680,\r\n    Tembaga: 229,\r\n    Kaleng: 120,\r\n    Besi: 139,\r\n    Kaca: 149,\r\n    Kabel: 149\r\n  },\r\n  {\r\n    name: \"Okt\",\r\n    botolplastik: 278,\r\n    Kardus: 390,\r\n    Tembaga: 200,\r\n    Kaleng: 139,\r\n    Besi: 139,\r\n    Kaca: 159,\r\n    Kabel: 159\r\n  },\r\n  {\r\n    name: \"Nov\",\r\n    botolplastik: 378,\r\n    Kardus: 390,\r\n    Tembaga: 200,\r\n    Kaleng: 210,\r\n    Besi: 250,\r\n    Kaca: 270,\r\n    Kabel: 260\r\n  },\r\n  {\r\n    name: \"Des\",\r\n    botolplastik: 449,\r\n    Kardus: 430,\r\n    Tembaga: 210,\r\n    Kaleng: 139,\r\n    Besi: 149,\r\n    Kaca: 180,\r\n    Kabel: 160\r\n  }\r\n];\r\n\r\nfunction SimpleLineChart() {\r\n  return (\r\n    <ResponsiveContainer width=\"99%\" height={300}>\r\n      <LineChart data={data} margin={{ top: 20, right: 1, left: 1, bottom: 5 }}>\r\n        <XAxis dataKey=\"name\" fontSize=\"10px\" />\r\n        <YAxis />\r\n        <CartesianGrid strokeDasharray=\"3 3\" />\r\n        <Tooltip />\r\n        <Legend />\r\n        <Line\r\n          type=\"monotone\"\r\n          dataKey=\"botolplastik\" // uv\r\n          stroke=\"#0000ff\"\r\n          activeDot={{ r: 8 }}\r\n        />\r\n        <Line type=\"monotone\" dataKey=\"Kardus\" stroke=\"#82ca9d\" />\r\n        <Line type=\"monotone\" dataKey=\"Tembaga\" stroke=\"#ff0000\" />\r\n        <Line type=\"monotone\" dataKey=\"Kaleng\" stroke=\"#2ca02c\" />\r\n        <Line type=\"monotone\" dataKey=\"Besi\" stroke=\"#9467bd\" />\r\n        <Line type=\"monotone\" dataKey=\"Kaca\" stroke=\"#8c564b\" />\r\n        <Line type=\"monotone\" dataKey=\"Kabel\" stroke=\"#e377c2\" />\r\n      </LineChart>\r\n    </ResponsiveContainer>\r\n  );\r\n}\r\n\r\nexport default SimpleLineChart;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { BarChart, Bar, XAxis, YAxis, CartesianGrid, Cell } from \"recharts\";\r\nimport ResponsiveContainer from \"recharts/lib/component/ResponsiveContainer\";\r\nconst colors = [\r\n  \"#ff0000\",\r\n  \"#82ca9d\",\r\n  \"#2ca02c\",\r\n  \"#9467bd\",\r\n  \"#0000ff\",\r\n  \"#8c564b\",\r\n  \"#e377c2\",\r\n  \"#7f7f7f\",\r\n  \"#bcbd22\",\r\n  \"#17becf\"\r\n];\r\nconst data = [\r\n  { name: \"Tembaga\", uv: 40, female: 24, male: 24 },\r\n  { name: \"Kardus\", uv: 30, female: 89, male: 22 },\r\n  { name: \"Kaleng\", uv: 20, female: 48, male: 22 },\r\n  { name: \"Besi Karat\", uv: 27, female: 39, male: 20 },\r\n  { name: \"Botol Plastik\", uv: 18, female: 69, male: 21 },\r\n  { name: \"Pecahan Kaca\", uv: 23, female: 38, male: 25 },\r\n  { name: \"Kabel Bekas\", uv: 34, female: 43, male: 21 }\r\n];\r\n\r\nconst getPath = (x, y, width, height) => {\r\n  return `M${x},${y + height}\r\n          C${x + width / 3},${y + height} ${x + width / 2},${y +\r\n    height / 3} ${x + width / 2}, ${y}\r\n          C${x + width / 2},${y + height / 3} ${x + (2 * width) / 3},${y +\r\n    height} ${x + width}, ${y + height}\r\n          Z`;\r\n};\r\n\r\nconst TriangleBar = props => {\r\n  const { fill, x, y, width, height } = props;\r\n\r\n  return <path d={getPath(x, y, width, height)} stroke=\"none\" fill={fill} />;\r\n};\r\n\r\nTriangleBar.propTypes = {\r\n  fill: PropTypes.string,\r\n  x: PropTypes.number,\r\n  y: PropTypes.number,\r\n  width: PropTypes.number,\r\n  height: PropTypes.number\r\n};\r\n\r\nfunction CustomShapeBarChart() {\r\n  return (\r\n    <ResponsiveContainer width=\"99%\" height={300}>\r\n      <BarChart\r\n        data={data}\r\n        margin={{ top: 20, right: 0.1, left: 1, bottom: 5 }}\r\n      >\r\n        <XAxis dataKey=\"name\" fontSize=\"10px\" />\r\n        <YAxis />\r\n        <CartesianGrid strokeDasharray=\"3 3\" />\r\n        <Bar\r\n          dataKey=\"female\"\r\n          fill=\"#8884d8\"\r\n          shape={<TriangleBar />}\r\n          label={{ position: \"top\" }}\r\n        >\r\n          {data.map((entry, index) => (\r\n            <Cell key={`cell-${index}`} fill={colors[index % 20]} />\r\n          ))}\r\n        </Bar>\r\n      </BarChart>\r\n    </ResponsiveContainer>\r\n  );\r\n}\r\n\r\nexport default CustomShapeBarChart;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { BarChart, Bar, XAxis, YAxis, CartesianGrid, Cell } from \"recharts\";\r\nimport ResponsiveContainer from \"recharts/lib/component/ResponsiveContainer\";\r\nconst colors = [\r\n  \"#ff0000\",\r\n  \"#82ca9d\",\r\n  \"#2ca02c\",\r\n  \"#9467bd\",\r\n  \"#0000ff\",\r\n  \"#8c564b\",\r\n  \"#e377c2\",\r\n  \"#7f7f7f\",\r\n  \"#bcbd22\",\r\n  \"#17becf\"\r\n];\r\nconst data = [\r\n  { name: \"Tembaga\", uv: 40, female: 24, male: 24 },\r\n  { name: \"Kardus\", uv: 30, female: 89, male: 22 },\r\n  { name: \"Kaleng\", uv: 20, female: 48, male: 22 },\r\n  { name: \"Besi Karat\", uv: 27, female: 39, male: 20 },\r\n  { name: \"Botol Plastik\", uv: 18, female: 69, male: 21 },\r\n  { name: \"Pecahan Kaca\", uv: 23, female: 38, male: 25 },\r\n  { name: \"Kabel Bekas\", uv: 34, female: 43, male: 21 }\r\n];\r\n\r\nconst getPath = (x, y, width, height) => {\r\n  return `M${x},${y + height}\r\n          C${x + width / 3},${y + height} ${x + width / 2},${y +\r\n    height / 3} ${x + width / 2}, ${y}\r\n          C${x + width / 2},${y + height / 3} ${x + (2 * width) / 3},${y +\r\n    height} ${x + width}, ${y + height}\r\n          Z`;\r\n};\r\n\r\nconst TriangleBar = props => {\r\n  const { fill, x, y, width, height } = props;\r\n\r\n  return <path d={getPath(x, y, width, height)} stroke=\"none\" fill={fill} />;\r\n};\r\n\r\nTriangleBar.propTypes = {\r\n  fill: PropTypes.string,\r\n  x: PropTypes.number,\r\n  y: PropTypes.number,\r\n  width: PropTypes.number,\r\n  height: PropTypes.number\r\n};\r\n\r\nfunction CustomShapeBarChartss() {\r\n  return (\r\n    <ResponsiveContainer width=\"99%\" height={300}>\r\n      <BarChart data={data} margin={{ top: 20, right: 10, left: 1, bottom: 5 }}>\r\n        <XAxis dataKey=\"name\" fontSize=\"10px\" />\r\n        <YAxis />\r\n        <CartesianGrid strokeDasharray=\"3 3\" />\r\n        <Bar\r\n          dataKey=\"female\"\r\n          fill=\"#8884d8\"\r\n          shape={<TriangleBar />}\r\n          label={{ position: \"top\" }}\r\n        >\r\n          {data.map((entry, index) => (\r\n            <Cell key={`cell-${index}`} fill={colors[index % 20]} />\r\n          ))}\r\n        </Bar>\r\n\r\n        <Bar\r\n          dataKey=\"male\"\r\n          fill=\"#bcbd22\"\r\n          shape={<TriangleBar />}\r\n          label={{ position: \"top\" }}\r\n        >\r\n          {data.map((entry, index) => (\r\n            <Cell key={`cell-${index}`} fill={colors[index % 20]} />\r\n          ))}\r\n        </Bar>\r\n      </BarChart>\r\n    </ResponsiveContainer>\r\n  );\r\n}\r\n\r\nexport default CustomShapeBarChartss;\r\n","import React from \"react\";\r\nimport {\r\n  ComposedChart,\r\n  Area,\r\n  Line,\r\n  Bar,\r\n  XAxis,\r\n  YAxis,\r\n  CartesianGrid,\r\n  Tooltip,\r\n  Legend,\r\n  ResponsiveContainer\r\n} from \"recharts\";\r\n\r\nconst data = [\r\n  { name: \"Januari\", organik: 590, non_organik: 800, kimia: 1400 },\r\n  { name: \"Februari\", organik: 868, non_organik: 967, kimia: 1506 },\r\n  { name: \"Maret\", organik: 1397, non_organik: 1098, kimia: 989 },\r\n  { name: \"April\", organik: 1480, non_organik: 1200, kimia: 1228 },\r\n  { name: \"Mei\", organik: 1520, non_organik: 1108, kimia: 1100 },\r\n  { name: \"Juni\", organik: 1400, non_organik: 680, kimia: 1700 }\r\n];\r\n\r\nfunction randomChart() {\r\n  return (\r\n    <ResponsiveContainer\r\n      width=\"99%\"\r\n      height={300}\r\n      margin={{ top: 20, right: 85, bottom: 20, left: 20 }}\r\n    >\r\n      <ComposedChart data={data}>\r\n        <XAxis dataKey=\"name\" fontSize=\"10px\" />\r\n        <YAxis />\r\n        <Tooltip />\r\n        <Legend />\r\n        <CartesianGrid stroke=\"#f5f5f5\" />\r\n        <Area\r\n          type=\"monotone\"\r\n          dataKey=\"organik\"\r\n          fill=\"#8884d8\"\r\n          stroke=\"#8884d8\"\r\n        />\r\n        <Bar dataKey=\"non_organik\" barSize={20} fill=\"#413ea0\" />\r\n        <Line type=\"monotone\" dataKey=\"kimia\" stroke=\"#ff7300\" />\r\n      </ComposedChart>\r\n    </ResponsiveContainer>\r\n  );\r\n}\r\n\r\nexport default randomChart;\r\n","import React from \"react\";\r\nimport FusionCharts from \"fusioncharts\";\r\nimport charts from \"fusioncharts/fusioncharts.charts\";\r\nimport ReactFusioncharts from \"react-fusioncharts\";\r\nimport ResponsiveContainer from \"recharts/lib/component/ResponsiveContainer\";\r\n\r\n// Resolves charts dependancy\r\ncharts(FusionCharts);\r\n\r\nconst dataSource = {\r\n  chart: {\r\n    showlegend: \"1\",\r\n    showpercentvalues: \"1\",\r\n    legendposition: \"right\",\r\n    usedataplotcolorforlabels: \"1\",\r\n    theme: \"fusion\"\r\n  },\r\n  data: [\r\n    {\r\n      label: \"Botol Plastik\",\r\n      value: \"32647479\"\r\n    },\r\n    {\r\n      label: \"Kadrus\",\r\n      value: \"22100932\"\r\n    },\r\n    {\r\n      label: \"Tembaga\",\r\n      value: \"14376\"\r\n    },\r\n    {\r\n      label: \"Kaleng\",\r\n      value: \"18674221\"\r\n    }\r\n  ]\r\n};\r\n\r\nclass PieChart extends React.Component {\r\n  render() {\r\n    return (\r\n      <ResponsiveContainer width=\"99%\" height={300}>\r\n        <ReactFusioncharts\r\n          type=\"pie2d\"\r\n          dataFormat=\"JSON\"\r\n          dataSource={dataSource}\r\n        />\r\n      </ResponsiveContainer>\r\n    );\r\n  }\r\n}\r\nexport default PieChart;\r\n","import React from \"react\";\r\nimport FusionCharts from \"fusioncharts\";\r\nimport charts from \"fusioncharts/fusioncharts.charts\";\r\nimport ReactFusioncharts from \"react-fusioncharts\";\r\nimport ResponsiveContainer from \"recharts/lib/component/ResponsiveContainer\";\r\n\r\n// Resolves charts dependancy\r\ncharts(FusionCharts);\r\n\r\nconst dataSource = {\r\n  chart: {\r\n    // caption: \"Android Distribution for our app\",\r\n    // subcaption: \"For all users in 2017\",\r\n    showpercentvalues: \"1\",\r\n    defaultcenterlabel: \"Android Distribution\",\r\n    aligncaptionwithcanvas: \"0\",\r\n    captionpadding: \"0\",\r\n    decimals: \"1\",\r\n    plottooltext:\r\n      \"<b>$percentValue</b> of our Android users are on <b>$label</b>\",\r\n    centerlabel: \"# Users: $value\",\r\n    theme: \"fusion\"\r\n  },\r\n  data: [\r\n    {\r\n      label: \"Ice Cream Sandwich\",\r\n      value: \"1000\"\r\n    },\r\n    {\r\n      label: \"Jelly Bean\",\r\n      value: \"5300\"\r\n    },\r\n    {\r\n      label: \"Kitkat\",\r\n      value: \"10500\"\r\n    },\r\n    {\r\n      label: \"Lollipop\",\r\n      value: \"18900\"\r\n    },\r\n    {\r\n      label: \"Marshmallow\",\r\n      value: \"17904\"\r\n    }\r\n  ]\r\n};\r\n\r\nclass Donutcharts extends React.Component {\r\n  render() {\r\n    return (\r\n      <ResponsiveContainer width=\"99%\" height={300}>\r\n        <ReactFusioncharts\r\n          type=\"doughnut2d\"\r\n          dataFormat=\"JSON\"\r\n          dataSource={dataSource}\r\n        />\r\n      </ResponsiveContainer>\r\n    );\r\n  }\r\n}\r\nexport default Donutcharts;\r\n","import React from \"react\";\r\nimport FusionCharts from \"fusioncharts\";\r\nimport charts from \"fusioncharts/fusioncharts.charts\";\r\nimport ReactFusioncharts from \"react-fusioncharts\";\r\nimport ResponsiveContainer from \"recharts/lib/component/ResponsiveContainer\";\r\n// Resolves charts dependancy\r\ncharts(FusionCharts);\r\n\r\nconst dataSource = {\r\n  chart: {\r\n    showvalues: \"1\",\r\n    showpercentintooltip: \"0\",\r\n    numberprefix: \"$\",\r\n    enablemultislicing: \"1\",\r\n    theme: \"fusion\"\r\n  },\r\n  data: [\r\n    {\r\n      label: \"Equity\",\r\n      value: \"300000\"\r\n    },\r\n    {\r\n      label: \"Debt\",\r\n      value: \"230000\"\r\n    },\r\n    {\r\n      label: \"Bullion\",\r\n      value: \"180000\"\r\n    },\r\n    {\r\n      label: \"Real-estate\",\r\n      value: \"270000\"\r\n    },\r\n    {\r\n      label: \"Insurance\",\r\n      value: \"20000\"\r\n    }\r\n  ]\r\n};\r\n\r\nclass Pietreecharts extends React.Component {\r\n  render() {\r\n    return (\r\n      <ResponsiveContainer width=\"99%\" height={300}>\r\n        <ReactFusioncharts\r\n          type=\"pie3d\"\r\n          dataFormat=\"JSON\"\r\n          dataSource={dataSource}\r\n        />\r\n      </ResponsiveContainer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Pietreecharts;\r\n","// in src/Dashboard.js\r\nimport React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport SimpleLineChart from \"../components/linecharts\";\r\nimport CustomShapeBarChart from \"../components/barcharts\";\r\nimport CustomShapeBarChartss from \"../components/barchartss\";\r\nimport Randomcharts from \"../components/randomcharts\";\r\nimport PieChart from \"../components/piecharts\";\r\nimport Donutcharts from \"../components/donutcharts\";\r\nimport Pietreecharts from \"../components/pietreecharts\";\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    flexGrow: 1\r\n  },\r\n  paper: {\r\n    padding: theme.spacing.unit * 2,\r\n    textAlign: \"center\",\r\n    fontWeight: \"Bold\",\r\n    color: theme.palette.text.secondary\r\n  },\r\n  pont: {\r\n    fontSize: \"30px\",\r\n    fontWeight: \"Bold\",\r\n    padding: theme.spacing.unit * 2,\r\n    textAlign: \"center\"\r\n  },\r\n  line: {\r\n    position: \"right\"\r\n  }\r\n});\r\n\r\nfunction CenteredGrid(props) {\r\n  const { classes } = props;\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Grid container spacing={24}>\r\n        <Grid item xs={12} md={12}>\r\n          <Paper className={classes.pont}>\r\n            Info Grafis Bank Sampah Perjuangan{\" \"}\r\n          </Paper>\r\n        </Grid>\r\n\r\n        <Grid item xs={12} md={12}>\r\n          <Paper className={classes.paper}>\r\n            Total Pembelian Berdasarkan Type-Sampah (Perminggu){\" \"}\r\n            <CustomShapeBarChart />{\" \"}\r\n          </Paper>\r\n        </Grid>\r\n\r\n        <Grid item xs={12} md={12}>\r\n          <Paper className={classes.paper}>\r\n            Total Pembelian Berdasarkan Jumlah Nasabah (Perminggu){\" \"}\r\n            <CustomShapeBarChartss />{\" \"}\r\n          </Paper>\r\n        </Grid>\r\n\r\n        <Grid item xs={12} md={12}>\r\n          <Paper className={classes.paper}>\r\n            Info Grafik Pembelian Berdasarkan Type Sampah (Kg){\" \"}\r\n            <SimpleLineChart />{\" \"}\r\n          </Paper>\r\n        </Grid>\r\n\r\n        <Grid item xs={12} md={6}>\r\n          <Paper className={classes.paper}>\r\n            Persentase Pembelian Type Sampah <Randomcharts />{\" \"}\r\n          </Paper>\r\n        </Grid>\r\n\r\n        <Grid item xs={12} md={6}>\r\n          <Paper className={classes.paper}>\r\n            Persentase Pembelian Type Sampah <Pietreecharts />{\" \"}\r\n          </Paper>\r\n        </Grid>\r\n\r\n        <Grid item xs={12} md={6}>\r\n          <Paper className={classes.paper}>\r\n            Persentase Pembelian Type Sampah <PieChart />{\" \"}\r\n          </Paper>\r\n        </Grid>\r\n\r\n        <Grid item xs={12} md={6}>\r\n          <Paper className={classes.paper}>\r\n            Persentase Pembelian Type Sampah <Donutcharts />{\" \"}\r\n          </Paper>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n\r\nCenteredGrid.PropTypes = {\r\n  classes: PropTypes.object.isRequired\r\n};\r\n\r\nexport default withStyles(styles)(CenteredGrid);\r\n","// in src/authProvider.js\r\n//import { AUTH_LOGIN, AUTH_LOGOUT, AUTH_ERROR, AUTH_CHECK } from \"react-admin\";\r\nimport { AUTH_LOGOUT } from \"react-admin\";\r\n\r\nexport default (type, params) => {\r\n  // called when the user attempts to log in\r\n  // if (type === AUTH_LOGIN) {\r\n  //   const { username } = params;\r\n  //   localStorage.setItem(\"username\", username);\r\n  //   // accept all username/password combinations\r\n  //   return Promise.resolve();\r\n  // }\r\n  // called when the user clicks on the logout button\r\n  if (type === AUTH_LOGOUT) {\r\n    localStorage.removeItem(\"username\");\r\n    return Promise.resolve();\r\n  }\r\n  // called when the API returns an error\r\n  // if (type === AUTH_ERROR) {\r\n  //   const { status } = params;\r\n  //   if (status === 401 || status === 403) {\r\n  //     localStorage.removeItem(\"username\");\r\n  //     return Promise.reject();\r\n  //   }\r\n  //   return Promise.resolve();\r\n  // }\r\n  // // called when the user navigates to a new location\r\n  // if (type === AUTH_CHECK) {\r\n  //   return localStorage.getItem(\"username\")\r\n  //     ? Promise.resolve()\r\n  //     : Promise.reject();\r\n  // }\r\n  // return Promise.reject(\"Unknown method\");\r\n};\r\n","// in src/App.js\nimport React from \"react\";\nimport { Admin, Resource } from \"react-admin\";\nimport { ChekTransaksi, TranShow } from \"./Menu/transactions\";\nimport { ScheduleList, ScheduleCreate } from \"./Menu/schedules\";\nimport {\n  MyaccountList,\n  AccountEdit,\n  MyAccount,\n  Example\n} from \"./Menu/MyAccount\";\nimport { UpdatehargaList, UpdateCreate, UpdateEdit } from \"./Menu/UpdateHarga\";\nimport { TrashpurchaseList, TrashShow } from \"./Menu/TrashPurchase\";\nimport { createMuiTheme } from \"@material-ui/core/styles\";\nimport index from \"@material-ui/core/colors/index\";\nimport Dashboard from \"./Menu/Dashboard\";\nimport authProvider from \"./authProvider\";\n//import dataProvider from './dataProvider';\nimport jsonServerProvider from \"ra-data-json-server\";\n//import simpleRestProvider from \"ra-data-json-server\";\n//import UserIcon from \"@material-ui/icons/Group\";\nimport ShoppingCart from \"@material-ui/icons/ShoppingCart\";\n//import List from \"@material-ui/icons/List\";\nimport DateRange from \"@material-ui/icons/DateRange\";\nimport AccountBox from \"@material-ui/icons/AccountBox\";\n//import PersonAdd from \"@material-ui/icons/PersonAdd\";\nimport AddCircleOutline from \"@material-ui/icons/AddCircleOutline\";\nimport LibraryBooks from \"@material-ui/icons/LibraryBooks\";\n//import { formatMs } from \"@material-ui/core/styles/transitions\";\n\nconst dataProvider = jsonServerProvider(\"http://localhost:3000\");\n// \"https://my-json-server.typicode.com/dodinurkasih/jsonserver\"\n// \"http://localhost:3000\"\nconst theme = createMuiTheme({\n  palette: {\n    primary: index,\n    secondary: {\n      main: \"#00e5ff\"\n    }\n  }\n});\n\nconst App = () => (\n  <Admin\n    title\n    theme={theme}\n    dashboard={Dashboard}\n    authProvider={authProvider}\n    dataProvider={dataProvider}\n  >\n    <Resource\n      name=\"transactions\"\n      show={TranShow}\n      list={ChekTransaksi}\n      icon={LibraryBooks}\n      options={{ label: \" Cek Transaksi\" }}\n    />\n    <Resource\n      name=\"pembelian\"\n      show={TrashShow}\n      list={TrashpurchaseList}\n      icon={ShoppingCart}\n      options={{ label: \"Pembelian Sampah\" }}\n    />\n    <Resource name=\"stransaksi\" />\n    <Resource\n      name=\"schedule\"\n      create={ScheduleCreate}\n      list={ScheduleList}\n      icon={DateRange}\n      options={{ label: \"Schedule PickUp\" }}\n    />\n    <Resource\n      name=\"myaccounts\"\n      list={MyaccountList}\n      edit={AccountEdit}\n      // grid={Grid}\n      exa={Example}\n      avatar={AccountBox}\n      card={MyAccount}\n      icon={AccountBox}\n      options={{ label: \"MyAccount\" }}\n    />\n    <Resource\n      name=\"updateharga\"\n      list={UpdatehargaList}\n      edit={UpdateEdit}\n      icon={AddCircleOutline}\n      create={UpdateCreate}\n      avatar={AccountBox}\n      options={{ label: \"Update Harga\" }}\n    />\n  </Admin>\n);\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}